{"version":3,"sources":["icon/eraser.svg","icon/flip.svg","icon/check.svg","icon/load.svg","icon/download.svg","icon/x.svg","icon/plus.svg","icon/pause.svg","icon/plus-circled.svg","icon/question.svg","icon/chevron.svg","icon/menu.svg","icon/trash.svg","icon/pencil-grey.svg","util/datautils.js","util/gridutils.js","util/clueutils.js","util/utilities.js","components/solve/Timer.js","components/solve/SolveNav.js","components/create/CreateNav.js","components/common/NavWrapper.js","components/common/grid/GridCell.js","components/common/grid/GridRow.js","components/common/grid/Grid.js","components/common/clues/CluesListItem.js","components/common/clues/CluesListColumn.js","components/common/clues/Clues.js","components/common/clues/ClueBanner.js","components/solve/PuzzleHeader.js","components/solve/SolveModal.js","components/solve/Solve.js","components/create/modals/LoadModalContent.js","components/create/modals/SaveModalContent.js","components/create/pdf/PDFStyles.js","components/create/pdf/PDFDocument.js","components/create/modals/PrintModalContent.js","components/create/modals/HelpModalContent.js","components/create/CreateModal.js","components/create/PuzzleHeader.js","components/create/Create.js","components/common/Sidebar.js","components/common/FrontDoor.js","components/App.js","serviceWorker.js","index.js","icon/pencil.svg","icon/save.svg"],"names":["module","exports","makeRandomDate","ignoreDays","day","daysInMonth","year","Math","floor","random","month","validDay","dayOfWeek","Date","getDay","indexOf","map","num","toString","length","monthStr","dayStr","findActiveClueCells","activeCell","isAcross","grid","rowLength","activeClueCells","firstActiveClueCell","push","nextClueCellToAdd","getActiveCellsFromClue","clueObj","clueNum","Object","keys","clue","startCell","i","findFirstActiveCells","firstCell","getNextDownClueStartCell","currentClue","clues","currentClueLabel","clueLabels","filter","includes","clueLabelIdx","getPreviousDownClueEndCell","previousClueStartCell","previousClueCells","makeLabels","replace","isGridComplete","some","char","findAllCells","cell","idx","splitKeepRemainder","str","separator","limit","split","ret","splice","join","buildCreateClues","oldClues","cluesMap","clueLabel","forEach","addedClue","acrossLabel","hasOwnProperty","downLabel","findFirstActiveClues","getActiveClueFromCell","activeClueNum","newActiveClue","getGreyedClues","newGrid","greyedClues","cellAdded","clueCells","gridUtils","activeClue","activeClueLabel","altDirClueCells","altDirActiveClue","altDirActiveClueLabel","greyedCluesCopy","slice","cells","label","shouldGreyClue","clueIdx","isCellInGroup","cellGroup","cellToFind","find","formatTime","seconds","substringStart","toISOString","substr","getNextCellState","ignoreUnfinishedClues","wasEmptyCell","currentCell","foundNextCell","endOfClue","unfinishedClue","clueStartCell","startOfClue","startOfAltDirClue","altDirectionActiveClue","getPrevCellState","correctCells","incorrectCells","shouldDelete","newActiveCell","stayOnCell","filteredIncorrectCells","newGreyedClues","newClueCell","newState","StyledTimer","styled","div","PauseButton","button","PauseIcon","img","Timer","value","correct","hasStarted","paused","finished","timerRef","handleTimerPause","handleTimerUpdate","useState","time","setTime","isRunning","setIsRunning","useEffect","intervalId","setInterval","clearInterval","current","onClick","src","pauseIcon","alt","StyledButton","props","isActive","StyledButtonSecondary","StyledButtonIcon","StyledButtonText","p","StyledDropdown","StyledDropdownItem","NewPuzzleButton","DaysButton","RightButtons","NotesButton","NotesIcon","NotesText","SaveButton","saved","DaysDropdown","DaysDropdownItem","DaysDropdownText","span","SolveNav","handleNewPuzzleClick","handleCheckClick","handleRevealClick","handleClearClick","handleNotesClick","handleSaveClick","notesMode","onCheckboxChange","progressSaved","timerValue","activeDropdown","setActiveDropdown","notesActive","setNotesActive","daysDropdown","useRef","checkDropdown","revealDropdown","daysButton","checkButton","revealButton","notesButton","closeDropdowns","e","target","id","className","handleNavButtonClick","newActiveDropdown","daysClicked","checkClicked","revealClicked","notesClicked","setDropdownPositions","dropdown","style","top","offsetTop","offsetHeight","left","offsetLeft","resizeId","handleResize","clearTimeout","setTimeout","window","addEventListener","removeEventListener","Fragment","ref","notesIcon","checkIcon","saveIcon","htmlFor","key","type","name","onChange","defaultChecked","charAt","toUpperCase","ButtonSet","Button","ButtonIcon","ButtonText","BlankButton","BlankIcon","rotate","BlankText","HelpIcon","DropdownChevron","ChevronIcon","EraserDropdown","ul","EraserOption","li","OptionIcon","OptionText","OptionActiveIndicator","Tooltip","TooltipButton","Overlay","CreateNav","savedPuzzles","blankMode","blankModeType","handleBlankClick","handleEraserTypeClick","handleLoadClick","handlePrintClick","handleNewClick","handleHelpClick","puzzleSaved","puzzleName","tooltipVisible","setTooltipVisible","eraserDropdownActive","setEraserDropdownActive","otherPuzzlesSaved","tooltipRef","helpButtonRef","eraserRef","dropdownRef","bindTooltipPosition","buttonOffsetTop","buttonOffsetLeft","buttonHeight","buttonWidth","offsetWidth","tooltipWidth","bindDropdownPosition","closeDropdown","localStorage","getItem","setItem","plusIcon","helpIcon","eraserIcon","mirroredEraserIcon","chevronIcon","loadIcon","printIcon","NavWrapper","StyledNavWrapper","Menu","toggleSidebarOpen","MenuIcon","menuIcon","mode","GridCell","React","memo","active","incorrect","revealed","note","StyledGridCell","disabled","SpecialCellMarker","isSunday","GridCellLabel","GridCellText","css","isActiveCell","col","row","isRelevantCell","getCellLabel","labels","StyledGridRow","GridCellContainer","GridRow","rowNumber","gridRow","gridRowLabels","revealedCells","noteCells","handleCellClick","Array","findRowsCells","findGridRowLabels","GridContainer","shadow","Grid","CluesListItem","clueText","isAltDirectionActive","isGreyed","handleClueClick","handleClueInput","StyledClueListItem","ClueSideTab","ClueLabel","ClueText","ClueTextInput","placeholder","data-clue-num","rest","CluesListColumnContainer","CluesListColumnHeader","HeaderLabel","HeaderClearLink","StyledCluesListColumn","CluesListColumn","listColumnNode","listItems","document","querySelector","from","querySelectorAll","activeListItem","item","altActiveListItem","listItemOffset","altListItemOffset","scrollTo","behavior","separateAcrossDownClues","separatedClues","clueType","toLowerCase","reduce","res","separateAcrossDownGreyedClues","CluesContainer","Clues","StyledClueBanner","ClueBannerLabel","ClueBannerText","text","ClueBannerTextInput","TextareaAutosize","ClueBanner","getBannerText","StyledPuzzleHeader","PuzzleDay","PuzzleAuthor","PuzzleHeader","date","author","dateObj","dateStr","getDate","getMonth","yearStr","getFullYear","makePuzzleTitle","formattedDate","ModalOverlay","hidden","ModalContent","ModalText","ModalButton","Modal","loading","handleModalButtonClick","getModalText","getModalButtonText","Solve","state","finishedGrid","puzzleDate","puzzleAuthor","ignoredDays","shouldCheckFinishedGrid","bind","handleKeyDown","handleCheckboxChange","saveState","timerState","createRef","self","this","changeActivePage","storedState","JSON","parse","setState","setupPuzzle","smoothscroll","polyfill","days","ignoredDaysNumbers","axios","get","fetchRandomData","then","response","data","size","cols","rows","square","gridNums","dir","fullClueNum","parseInt","clueUtils","gridnums","catch","error","newTimerValue","stringify","keyCode","preventDefault","enterValidCharacter","activeClueCellsAcross","activeClueCellsDown","activeClueAcross","activeClueDown","moveToPrevCell","moveToNextCell","utils","wasEmpty","removeIncorrectCell","newNoteCells","shouldAddNote","shouldDeleteNote","checkFinishedPuzzle","altDirActiveClueCells","altDirClueFirstCell","alert","cellsToCheck","currentGridValue","finishedGridValue","cellsToReveal","array","ignoredDaysCopy","nextCellState","prevCellState","cellToRemove","prevCell","puzzleCorrect","body","LoaderContainer","color","BodyContainer","GridHalf","GridHalfRail","CluesHalf","StyledSolve","blurred","NavContainer","SolveModal","Component","StyledLoadModalContent","Header","PuzzleList","PuzzleListItem","PuzzleInfo","PuzzleName","DateCreated","Icon","LoadModalContent","handleDeleteClick","reverse","dateCreated","stopPropagation","trashIcon","StyledSaveModalContent","FormWrapper","form","InputWrapper","Input","input","Warning","SaveModalContent","setName","invalidName","setInvalidName","onSubmit","makePDFStyles","StyleSheet","create","page","backgroundColor","padding","height","fontSize","fontFamily","headerLine","width","marginBottom","display","flexDirection","flexWrap","borderTop","borderLeft","cellBorderRight","borderRight","cellBorderBottom","borderBottom","cellDisabled","position","margin","textAlign","marginRight","separateClues","PDFDocument","acrossClues","downClues","styles","getLabel","l","getCellStyle","borderStyle","backgroundStyle","wrap","undefined","Wrapper","DownloadText","PrintModalContent","handleModalClose","downloadText","click","fileName","blob","url","Container","TipsList","TipsListItem","ItemHeader","ItemTextPar","Image","rotated","Footer","FooterLink","a","HelpModalContent","downloadIcon","href","ModalCloseButton","ModalCloseIcon","CreateModal","openModalType","handlePuzzleDeleteClick","handleClick","xIcon","NameSection","EditButton","EditIcon","SizeDropdown","select","SizeOption","option","gridSize","handleEditClick","handleGridSizeChange","pencilIcon","defaultValue","Create","setupNewPuzzle","handleCluesClearClick","handleBlankTypeClick","savePuzzle","timeout","createState","fill","oldName","stateCopy","assign","newSavedPuzzles","refreshSavedPuzzles","puzzles","loadedPuzzle","activeElement","tagName","handleBlankChange","symmetricCell","newClues","newActiveClueCells","newLabels","getAttribute","shouldEdit","shouldClose","loadPuzzle","newRowLength","Number","oldRowLength","delta","oldRow","newRow","concat","StyledCreate","SidebarContainer","open","SidebarClose","SidebarCloseIcon","LinkItem","LinkItemActiveIndicator","LinkItemIcon","Sidebar","activePage","handler","pages","path","icon","to","StyledFrontDoor","StyledLink","Link","CenterRail","Highlight","Links","Text","Subtext","FrontDoor","SmallScreenWarning","App","sidebarOpen","setSidebarOpen","setActivePage","pageName","exact","process","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","origin","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ecdb5ca8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eraser.815ad0f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/flip.4af6e5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.0d4e03c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/load.821bc33d.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.e48ed1de.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.273fc395.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.d0f5911d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.9c5f89be.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-circled.1e71bac7.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.2508df20.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron.3fc89807.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.a450cc10.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.665926e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-grey.7317c4ce.svg\";","import axios from 'axios';\n\nexport const fetchRandomData = (ignoredDays) => {\n\tconst days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n\tconst ignoredDaysNumbers = ignoredDays.map(day => days.indexOf(day));\n\n\tlet [year, month, day] = makeRandomDate(ignoredDaysNumbers);\n\n\t// return axios.get(`https://raw.githubusercontent.com/doshea/nyt_crosswords/master/${year}/${month}/${day}.json`);\n\treturn axios.get(`https://rawcdn.githack.com/doshea/nyt_crosswords/623e72e99b25a524c85b56bf832dd7cd8c2a34a9/${year}/${month}/${day}.json`);\n}\n\nexport const makeRandomDate = (ignoreDays) => {\n\tconst [minYear, maxYear] = [1979, 2015];\n\tconst daysInMonth = [31,28,31,30,31,30,31,31,30,31,30,31];\n\n\tconst year = Math.floor(Math.random() * (maxYear - minYear)) + minYear;\n\tconst month = Math.floor(Math.random() * 12) + 1;\n\n\tlet day;\n\tlet validDay = false;\n\twhile (!validDay) {\n\t\tday = Math.floor(Math.random() * daysInMonth[month - 1]) + 1;\n\t\tlet dayOfWeek = (new Date(year, month - 1, day)).getDay();\n\t\tvalidDay = ignoreDays.indexOf(dayOfWeek) === -1;\n\t}\n\n\t// api requires \"03\" and not \"3\"\n\tconst [monthStr, dayStr] = [month, day].map(num => num.toString().length !== 2 ? \"0\" + num : num.toString());\n\n\treturn [year.toString(), monthStr, dayStr];\n}\n","export const makeFinishedGrid = (grid) => {\n\treturn grid.map(char => char === \".\" ? false : char.toUpperCase());\n}\n\nexport const resizeGrid = (newRowLength, oldRowLength, grid) => {\n\tconst delta = newRowLength - oldRowLength;\n\tlet newGrid = [];\n\t// go row by row and add/delete items as necessary\n\tfor (let i=0; i < oldRowLength * oldRowLength; i += oldRowLength) {\n\t\tconst oldRow = grid.slice(i, i + oldRowLength);\n\t\tconst newRow = (delta > 0) ? oldRow.concat(Array(delta).fill(null)) : oldRow.slice(0, oldRowLength + delta);\n\t\tnewGrid = newGrid.concat(newRow);\n\t}\n\treturn (delta > 0) ? newGrid.concat(Array(newRowLength * delta).fill(null)) : newGrid.slice(0, newRowLength * newRowLength);\n}\t\n\nexport const resizeActiveCell = (newRowLength, oldRowLength, oldActiveCell) => {\n\tconst oldActiveRow = Math.floor(oldActiveCell / oldRowLength);\n\tconst oldActiveCol = oldActiveCell % oldRowLength;\n\treturn (oldActiveRow * newRowLength) + oldActiveCol;\n}\n\n// given a cell, find all cells in relevant clue\nexport const findActiveClueCells = (activeCell, isAcross, grid, rowLength) => {\n\tlet activeClueCells = [];\n\n\t// find first cell in clue, then continue adding until the end of the clue\n\tlet firstActiveClueCell = activeCell;\n\n\tif (isAcross) {\n\t\t// first clue cell is either column 0 or when the previous column is blacked out\n\t\twhile (firstActiveClueCell % rowLength !== 0 && grid[firstActiveClueCell - 1] !== false) {\n\t\t\tfirstActiveClueCell -= 1;\n\t\t}\n\t} else {\n\t\t// first clue cell is either row 0 or when the previous row is blacked out\n\t\twhile (firstActiveClueCell >= rowLength && grid[firstActiveClueCell - rowLength] !== false) {\n\t\t\tfirstActiveClueCell -= rowLength;\n\t\t}\n\t}\n\n\tactiveClueCells.push(firstActiveClueCell);\n\n\tlet nextClueCellToAdd = firstActiveClueCell;\n\tif (isAcross) {\n\t\twhile (nextClueCellToAdd % rowLength !== rowLength - 1 && grid[nextClueCellToAdd + 1] !== false) {\n\t\t\tnextClueCellToAdd += 1;\n\t\t\tactiveClueCells.push(nextClueCellToAdd);\n\t\t}\n\t} else {\n\t\twhile (Math.floor(nextClueCellToAdd / rowLength) < (rowLength - 1) && grid[nextClueCellToAdd + rowLength] !== false) {\n\t\t\tnextClueCellToAdd += rowLength;\n\t\t\tactiveClueCells.push(nextClueCellToAdd);\n\t\t}\n\t}\n\n\treturn activeClueCells;\n}\n\n// given a clue, return active cell in that clue, and rest of clue cells, and if the clue is across\nexport const getActiveCellsFromClue = (clueObj, grid, rowLength) => {\n\tconst clueNum = Object.keys(clueObj)[0];\n\tconst clue = clueObj[clueNum];\n\tconst isAcross = clueNum[clueNum.length - 1] === \"A\";\n\tconst activeClueCells = findActiveClueCells(clue.startCell, isAcross, grid, rowLength);\n\n\tlet i = 0;\n\tlet activeCell = activeClueCells[i];\n\twhile (grid[activeCell] !== null && i < activeClueCells.length - 1) {\n\t\ti++;\n\t\tactiveCell = activeClueCells[i];\n\t}\n\n\t// if every cell is filled, make first one active\n\tif (grid[activeCell] !== null) {\n\t\tactiveCell = activeClueCells[0];\n\t}\n\n\treturn {activeCell, activeClueCells, isAcross};\n}\n\n// returns [first active cell, first active clue cells]\nexport const findFirstActiveCells = (grid, isAcross, rowLength) => {\n\tlet firstCell = 0;\n\twhile (grid[firstCell] === false) {\n\t\tfirstCell += 1;\n\t}\n\n\treturn [firstCell, findActiveClueCells(firstCell, isAcross, grid, rowLength)];\n}\n\nexport const getNextDownClueStartCell = (currentClue, clues) => {\n\tconst currentClueLabel = Object.keys(currentClue)[0];\n\tconst clueLabels = Object.keys(clues).filter(clue => clue.includes(\"D\"));\n\tconst clueLabelIdx = clueLabels.indexOf(currentClueLabel);\n\t// if we're on last clue, return top left cell, otherwise return start cell of next down clue\n\tif (clueLabelIdx < clueLabels.length - 1) {\n\t\treturn clues[clueLabels[clueLabelIdx + 1]].startCell;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport const getPreviousDownClueEndCell = (currentClue, clues, grid, rowLength) => {\n\tconst currentClueLabel = Object.keys(currentClue)[0];\n\tconst clueLabels = Object.keys(clues).filter(clue => clue.includes(\"D\"));\n\tconst clueLabelIdx = clueLabels.indexOf(currentClueLabel);\n\n\tif (clueLabelIdx === 0) {\n\t\treturn 0;\n\t} else {\n\t\tconst previousClueStartCell = clues[clueLabels[clueLabelIdx - 1]].startCell;\n\t\tconst previousClueCells = findActiveClueCells(previousClueStartCell, false, grid, rowLength);\n\t\treturn previousClueCells[previousClueCells.length - 1];\n\t}\n}\n\n// returns [starting cell, clue number label]\nexport const makeLabels = (clues) => {\n\treturn Object.keys(clues).map(clueNum => [clues[clueNum].startCell, clueNum.replace(/\\D+/g, '')]);\n}\n\n// return false if any squares have more than one letter\nexport const isRebus = (grid) => grid.some(square => square.length > 1);\n\nexport const isGridComplete = (grid) => !grid.some(char => char === null);\n\nexport const findAllCells = (grid) => {\n\treturn grid\n\t\t.map((cell, idx) => (cell === false) ? false : idx)\n\t    .filter(cell => cell !== false);\n}","import * as gridUtils from './gridutils';\n\nexport const makeClues = (clues, gridNums) => {\n\tlet cluesMap = {};\n\t[\"across\", \"down\"].forEach(dir => {\n\t\tclues[dir].forEach(clue => {\n\t\t\tconst [clueNum, clueText] = splitKeepRemainder(clue, \". \", 1);\n\t\t\tconst fullClueNum = clueNum + (dir === \"across\" ? \"A\" : \"D\");\n\n\t\t\tconst startCell = gridNums.indexOf(parseInt(clueNum.replace(/\\D+/g, '')));\n\n\t\t\tcluesMap[fullClueNum] = {\n\t\t\t\t\"startCell\": startCell,\n\t\t\t\t\"clue\": clueText\n\t\t\t\t\t.replace(\"&amp;\", \"&\")\n\t\t\t\t\t.replace(\"&reg;\", \"®\")\n\t\t\t};\n\t\t});\n\t});\n\n\treturn cluesMap;\n}\n\nexport const splitKeepRemainder = (str, separator, limit) => {\n\tstr = str.split(separator);\n\tif (str.length > limit) {\n\t\tvar ret = str.splice(0, limit);\n\t\tret.push(str.join(separator));\n\n\t\treturn ret;\n\t}\n\n\treturn str;\n}\n\nexport const buildCreateClues = (grid, rowLength, oldClues = {}) => {\n\tlet cluesMap = {};\n\tlet clueLabel = 1;\n\tgrid.forEach((cell, idx) => {\n\t\tif (cell !== false) {\n\t\t\tlet addedClue = false;\n\t\t\tif (idx % rowLength === 0 || grid[idx - 1] === false) {\n\t\t\t\tconst acrossLabel = `${clueLabel}A`;\n\t\t\t\tcluesMap[acrossLabel] = {\n\t\t\t\t\tstartCell: idx,\n\t\t\t\t\tclue: oldClues.hasOwnProperty(acrossLabel) ? oldClues[acrossLabel].clue : \"\"\n\t\t\t\t};\n\t\t\t\taddedClue = true;\n\t\t\t}\n\t\t\tif (idx < rowLength || grid[idx - rowLength] === false) {\n\t\t\t\tconst downLabel = `${clueLabel}D`;\n\t\t\t\tcluesMap[downLabel] = {\n\t\t\t\t\tstartCell: idx,\n\t\t\t\t\tclue: oldClues.hasOwnProperty(downLabel) ? oldClues[downLabel].clue : \"\"\n\t\t\t\t};\n\t\t\t\taddedClue = true;\n\t\t\t}\n\t\t\tif (addedClue) {\n\t\t\t\tclueLabel++;\n\t\t\t}\n\t\t}\n\t});\n\treturn cluesMap;\n}\n\nexport const findFirstActiveClues = (isAcross, clues) => {\n\tconst clueNum = `1${isAcross ? \"A\" : \"D\"}`;\n\tif (clues[clueNum]) {\n\t\tlet ret = {};\n\t\tret[clueNum] = clues[clueNum];\n\t\treturn ret;\n\t}\n\n\treturn null;\n}\n\n// cell must be first of the clue\nexport const getActiveClueFromCell = (cell, clues, isAcross) => {\n\tconst activeClueNum = Object.keys(clues).filter(clueNum => \n\t\t   clues[clueNum].startCell === cell\n\t\t&& clueNum[clueNum.length - 1] === (isAcross ? \"A\" : \"D\"));\n\n\tlet newActiveClue = {}\n\tnewActiveClue[activeClueNum] = clues[activeClueNum];\n\n\treturn newActiveClue;\n} \n\n// if cell was added, check if we should make clue greyed\n// if cell was deleted, check if we should un-grey clue\nexport const getGreyedClues = (newGrid, clues, greyedClues, activeCell, cellAdded, isAcross, rowLength) => {\n\tconst clueCells = gridUtils.findActiveClueCells(activeCell, isAcross, newGrid, rowLength);\n\tconst activeClue = getActiveClueFromCell(clueCells[0], clues, isAcross);\n\tconst activeClueLabel = Object.keys(activeClue)[0];\n\n\tconst altDirClueCells = gridUtils.findActiveClueCells(activeCell, !isAcross, newGrid, rowLength);\n\tconst altDirActiveClue = getActiveClueFromCell(altDirClueCells[0], clues, !isAcross);\n\tconst altDirActiveClueLabel = Object.keys(altDirActiveClue)[0];\n\n\tlet greyedCluesCopy = greyedClues.slice();\n\n\tconst clueInfo = [[clueCells, activeClueLabel], [altDirClueCells, altDirActiveClueLabel]];\n\tclueInfo.forEach(([cells, label]) => {\n\t\tlet shouldGreyClue = !cells.some(cell => newGrid[cell] === null);\n\t\tlet clueIdx = greyedCluesCopy.indexOf(label);\n\t\tif (cellAdded && shouldGreyClue && clueIdx < 0) {\n\t\t\tgreyedCluesCopy = [...greyedCluesCopy, label];\n\t\t} else if (!cellAdded && clueIdx >= 0) {\n\t\t\tgreyedCluesCopy.splice(clueIdx, 1);\n\t\t}\n\t});\n\n\treturn greyedCluesCopy;\n}","import {findActiveClueCells, getNextDownClueStartCell, getPreviousDownClueEndCell} from './gridutils';\nimport {getActiveClueFromCell, getGreyedClues} from './clueutils';\n\n// for state arrays like correct, revealed, noted cells\nexport const isCellInGroup = (cellGroup, cellToFind) => !!cellGroup.find(cell => cellToFind === cell);\n\nexport const removeArrayItem = (array, item) => {\n\tconst idx = array.indexOf(item);\n\tif (idx > -1) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\n// // return false if any squares have more than one letter\n// export const isRebus = (grid) => grid.some(square => square.length > 1);\n\nexport const formatTime = (seconds) => {\n\tlet substringStart;\n\tif (seconds < 600) {\n\t\tsubstringStart = 15;\n\t} else if (seconds < 3600) {\n\t\tsubstringStart = 14;\n\t} else if (seconds < 36000) {\n\t\tsubstringStart = 12;\n\t} else {\n\t\tsubstringStart = 11;\n\t}\n\n\treturn new Date(seconds * 1000).toISOString().substr(substringStart, 19 - substringStart);\n}\n\nexport const formatDate = (date) => {\n\treturn `${date.getMonth()}/${date.getDate()}/${date.getFullYear().toString().slice(2)}`\n}\n\nexport const getNextCellState = (\n\tgrid, \n\tclues, \n\tactiveCell, \n\trowLength, \n\tisAcross, \n\tignoreUnfinishedClues, \n\twasEmptyCell\n) => {\n\tlet currentCell = activeCell;\n\tlet foundNextCell = false;\n\n\t// find next closest empty cell\n\twhile (!foundNextCell) {\n\t\tlet activeClueCells = findActiveClueCells(currentCell, isAcross, grid, rowLength);\n\t\tlet endOfClue = activeClueCells[activeClueCells.length - 1] === currentCell;\n\t\t\t\n\t\tlet unfinishedClue = false;\n\t\tif (endOfClue && !ignoreUnfinishedClues) {\n\t\t\tunfinishedClue = activeClueCells.some(cell => {\n\t\t\t\treturn grid[cell] === null \n\t\t\t\t\t&& activeCell !== cell ;\n\t\t\t});\n\t\t}\n\n\t\tif (unfinishedClue) {\n\t\t\t// if we reach the end by filling a cell and the current clue has an empty cell somewhere, \n\t\t\t// go back to first cell in clue and eventually find empty cell\n\t\t\tcurrentCell = activeClueCells[0];\n\t\t} else if (isAcross) {\t\n\t\t\t// if across, always move laterally and loop back to cell 0 for a new row\n\t\t\tcurrentCell += 1;\n\t\t} else {\n\t\t\t// if down, move down within clue, then move to next down clue\n\t\t\tlet clueStartCell = activeClueCells[0];\n\t\t\tlet activeClue = getActiveClueFromCell(clueStartCell, clues, isAcross);\n\t\t\t// let endOfClue = currentCell === activeClueCells[activeClueCells.length - 1];\n\n\t\t\tif (endOfClue) {\n\t\t\t\tcurrentCell = getNextDownClueStartCell(activeClue, clues);\n\t\t\t} else {\n\t\t\t\tcurrentCell += rowLength;\n\t\t\t}\n\t\t}\n\n\t\t// return to first cell if we're at the last cell\n\t\tif (Math.floor(currentCell / rowLength) > rowLength - 1 \n\t\t\t|| currentCell % rowLength > rowLength - 1) {\n\t\t\tcurrentCell = 0;\n\t\t}\n\n\t\t// if previously filled cell was empty, don't stop until we find next empty cell\n\t\t// if it had value, stop at next valid cell we find, even if it had a value\n\t\tfoundNextCell = wasEmptyCell \n\t\t\t? (grid[currentCell] === null) \n\t\t\t: (grid[currentCell] !== false);\n\t}\n\n\tconst startOfClue = findActiveClueCells(currentCell, isAcross, grid, rowLength)[0];\n\tconst startOfAltDirClue = findActiveClueCells(currentCell, !isAcross, grid, rowLength)[0];\n\n\treturn {\n\t\tactiveCell: currentCell,\n\t\tactiveClueCells: findActiveClueCells(currentCell, isAcross, grid, rowLength),\n\t\tactiveClue: getActiveClueFromCell(startOfClue, clues, isAcross),\n\t\taltDirectionActiveClue: getActiveClueFromCell(startOfAltDirClue, clues, !isAcross)\n\t}\n}\n\nexport const getPrevCellState = (\n\tgrid, \n\tclues, \n\tactiveCell, \n\trowLength, \n\tactiveClueCells,\n\tcorrectCells,\n\tincorrectCells, \n\tgreyedClues,\n\tisAcross, \n\tshouldDelete\n) => {\n\tlet currentCell = activeCell;\n\tlet foundNextCell = false;\n\n\twhile (!foundNextCell) {\n\t\tlet activeClueCells = findActiveClueCells(currentCell, isAcross, grid, rowLength);\n\n\t\tif (isAcross) {\n\t\t\tcurrentCell -= 1;\n\t\t} else {\n\t\t\tlet clueStartCell = activeClueCells[0];\n\t\t\tlet activeClue = getActiveClueFromCell(clueStartCell, clues, isAcross);\n\t\t\tlet startOfClue = activeClueCells[0] === currentCell;\n\n\t\t\tif (startOfClue) {\n\t\t\t\tcurrentCell = getPreviousDownClueEndCell(activeClue, clues, grid, rowLength);\n\t\t\t} else {\n\t\t\t\tcurrentCell -= rowLength;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t// don't do anything if we're at first cell\n\t\tif (currentCell < 0) {\n\t\t\tcurrentCell = 0;\n\t\t}\n\n\t\tfoundNextCell = grid[currentCell] !== false || currentCell === 0;\n\t}\n\n\tconst newActiveCell = currentCell;\n\n\tconst stayOnCell = grid[activeCell] !== null && shouldDelete;\n\tlet newGrid = grid.slice();\n\tlet filteredIncorrectCells = null;\n\n\t// delete active cell value, and previous cell value if the active cell is empty\n\tif (shouldDelete) {\n\t\tnewGrid[activeCell] = null;\n\t\tif (!stayOnCell && (!correctCells || !isCellInGroup(correctCells, newActiveCell))) {\n\t\t\tnewGrid[newActiveCell] = null;\n\t\t}\n\n\t\tif (incorrectCells) {\n\t\t\tfilteredIncorrectCells = incorrectCells.filter(cell => {\n\t\t\t\treturn activeCell !== cell && (stayOnCell || newActiveCell !== cell);\n\t\t\t});\n\t\t}\n\t}\n\n\tconst newGreyedClues = greyedClues && shouldDelete ? getGreyedClues(newGrid, clues, greyedClues, stayOnCell ? activeCell : newActiveCell, \n\t\tfalse, isAcross, rowLength) : null;\n\n\t// use different cell to find active clue depending on if we moved or stayed cells\n\tconst newClueCell = stayOnCell ? activeCell : newActiveCell;\n\tconst startOfClue = findActiveClueCells(newClueCell, isAcross, grid, rowLength)[0];\n\tconst startOfAltDirClue = findActiveClueCells(newClueCell, !isAcross, grid, rowLength)[0];\n\n\t// if active cell had value, stay there. otherwise, move to previous cell\n\tlet newState = {\n\t\tgrid: newGrid,\n\t\tactiveCell: stayOnCell ? activeCell : newActiveCell,\n\t\tactiveClueCells: stayOnCell ? activeClueCells : findActiveClueCells(newActiveCell, isAcross, grid, rowLength),\n\t\tactiveClue: getActiveClueFromCell(startOfClue, clues, isAcross),\n\t\taltDirectionActiveClue: getActiveClueFromCell(startOfAltDirClue, clues, !isAcross),\n\t};\n\tif (newGreyedClues) {\n\t\tnewState[\"greyedClues\"] = newGreyedClues;\n\t}\n\tif (filteredIncorrectCells) {\n\t\tnewState[\"incorrectCells\"] = filteredIncorrectCells;\n\t}\n\treturn newState;\n}","import React, {useState, useEffect} from 'react';\nimport {formatTime} from '../../util/utilities';\nimport pauseIcon from '../../icon/pause.svg';\nimport styled from 'styled-components';\n\nconst Timer = ({\n    value,\n    correct,\n    hasStarted,\n    paused,\n    finished,\n    timerRef,\n    handleTimerPause,\n    handleTimerUpdate\n}) => {\n    const [time, setTime] = useState(value);\n    const [isRunning, setIsRunning] = useState(false);\n\n    useEffect(() => {\n        setIsRunning(!paused && !correct && hasStarted);\n        // pass time back up to Solve so Modal can use the current timer value\n        handleTimerUpdate(time);\n        // eslint-disable-next-line\n    }, [paused, correct, hasStarted, finished]);\n\n    useEffect(() => {\n        setTime(value);\n    }, [value])\n\n    useEffect(() => {\n        if (isRunning) {\n            const intervalId = setInterval(() => {\n                setTime(seconds => seconds + 1);\n            }, 1000);\n            return () => clearInterval(intervalId);\n        }\n    }, [isRunning]);\n\n    useEffect(() => {\n        timerRef.current = time;\n    }, [time, timerRef]);\n\n    return (\n        <StyledTimer>\n            <span> {formatTime(time)} </span>\n            <PauseButton onClick={() => handleTimerPause()}>\n                <PauseIcon src={pauseIcon} alt=\"Pause\"/>\n            </PauseButton> \n        </StyledTimer>\n    );\n};\n\nconst StyledTimer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: 10px;\n    @media(max-width: 700px) {\n        margin-right: 0;\n    }\n`;\n\nconst PauseButton = styled.button`\n    border: none;\n    background-color: transparent;\n    height: 16px;\n    width: 16px;\n    margin-left: 5px;\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst PauseIcon = styled.img`\n    height: 100%;\n\twidth: 100%;\n    fill: #DCEFFE;\n\n`;\n\nexport default Timer;","import React, {useState, useEffect, useRef} from 'react';\nimport Timer from './Timer';\nimport styled from 'styled-components';\nimport notesIcon from '../../icon/pencil.svg';\nimport checkIcon from '../../icon/check.svg';\nimport saveIcon from '../../icon/save.svg';\n\nconst SolveNav = ({\n\thandleTimerPause,\n\thandleTimerUpdate,\n\thandleNewPuzzleClick,\n\thandleCheckClick,\n\thandleRevealClick,\n\thandleClearClick,\n\thandleNotesClick,\n\thandleSaveClick,\n\tnotesMode,\n\tonCheckboxChange,\n\tprogressSaved,\n\ttimerValue,\n\ttimerRef,\n\thasStarted,\n\tpaused,\n\tfinished,\n\tcorrect\n}) => {\n\tconst days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n\tconst [activeDropdown, setActiveDropdown] = useState(\"\");\n\tconst [notesActive, setNotesActive] = useState(notesMode);\n\n\tconst daysDropdown = useRef(null);\n\tconst checkDropdown = useRef(null);\n\tconst revealDropdown = useRef(null);\n\t\n\tconst daysButton = useRef(null);\n\tconst checkButton = useRef(null);\n\tconst revealButton = useRef(null);\n\tconst notesButton = useRef(null);\n\n\tconst closeDropdowns = (e) => {\n\t\tconst target = e.target.id;\n\t\tif (target !== \"check-button\"\n\t\t\t&& target !== \"reveal-button\" \n\t\t\t&& target !== \"days-button\"\n\t\t\t&& !e.target.className.includes(\"days-dropdown\")) {\n\t\t\tsetActiveDropdown(\"\");\n\t\t}\n\t};\n\n\tconst handleNavButtonClick = (e) => {\n\t\tconst daysClicked = e.target.id === \"days-button\";\n\t\tconst checkClicked = e.target.id === \"check-button\";\n\t\tconst revealClicked = e.target.id === \"reveal-button\";\n\t\tconst notesClicked = e.target.id === \"notes-button\" || e.target.id === \"notes-icon\" || e.target.id === \"notes-text\";\n\n\t\tlet newActiveDropdown;\n\t\tif (daysClicked) {\n\t\t\tnewActiveDropdown = activeDropdown === \"days\" ? \"\" : \"days\";\n\t\t} else if (checkClicked) {\n\t\t\tnewActiveDropdown = activeDropdown === \"check\" ? \"\" : \"check\";\n\t\t} else if (revealClicked) {\n\t\t\tnewActiveDropdown = activeDropdown === \"reveal\" ? \"\" : \"reveal\";\n\t\t}\n\n\t\tsetActiveDropdown(newActiveDropdown);\n\t\tsetNotesActive(notesClicked ? !notesActive : notesActive);\n\t};\n\n\tconst setDropdownPositions = () => {\n\t\tconst dropdownEls = [\n\t\t\t[daysDropdown.current, daysButton.current], \n\t\t\t[checkDropdown.current, checkButton.current], \n\t\t\t[revealDropdown.current, revealButton.current]\n\t\t];\n\n\t\t// position dropdown below its relevant button\n\t\tdropdownEls.forEach(([dropdown, button]) => {\n\t\t\tdropdown.style.top = `${button.offsetTop + button.offsetHeight + 1}px`;\n\t\t\tdropdown.style.left = `${button.offsetLeft}px`;\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tlet resizeId;\n\t\tconst handleResize = () => {\n\t\t\tclearTimeout(resizeId);\n\t\t\tresizeId = setTimeout(setDropdownPositions, 500);\n\t\t};\n\n\t\twindow.addEventListener(\"click\", closeDropdowns);\n\t\twindow.addEventListener(\"resize\", handleResize);\n\n\t\tsetDropdownPositions();\n\n        // clean up\n        return () => {\n\t\t\twindow.removeEventListener(\"click\", closeDropdowns);\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<NewPuzzleButton onClick={handleNewPuzzleClick}> New Puzzle </NewPuzzleButton>\n\t\t\t<DaysButton \n\t\t\t\tid=\"days-button\" \n\t\t\t\tisActive={activeDropdown === \"days\"}\n\t\t\t\tonClick={handleNavButtonClick}\n\t\t\t\tref={daysButton}> \n\t\t\t\tDifficulty \n\t\t\t</DaysButton>\n\t\t\t\n\t\t\t<RightButtons>\n\t\t\t\t<Timer \n\t\t\t\t\tvalue={timerValue}\n\t\t\t\t\tcorrect={correct}\n\t\t\t\t\thasStarted={hasStarted}\n\t\t\t\t\tpaused={paused} \n\t\t\t\t\tfinished={finished}\n\t\t\t\t\ttimerRef={timerRef}\n\t\t\t\t\thandleTimerPause={handleTimerPause}\n\t\t\t\t\thandleTimerUpdate={handleTimerUpdate} />\n\t\t\t\t\t\n\t\t\t\t<StyledButton onClick={handleClearClick}> Clear Puzzle </StyledButton>\n\t\t\t\t<StyledButton \n\t\t\t\t\tid=\"reveal-button\"\n\t\t\t\t\tisActive={activeDropdown === \"reveal\"}\n\t\t\t\t\tonClick={handleNavButtonClick}\n\t\t\t\t\tref={revealButton}> \n\t\t\t\t\tReveal \n\t\t\t\t</StyledButton>\n\t\t\t\t<StyledButton \n\t\t\t\t\tid=\"check-button\"\n\t\t\t\t\tisActive={activeDropdown === \"check\"}\n\t\t\t\t\tonClick={handleNavButtonClick}\n\t\t\t\t\tref={checkButton}> \n\t\t\t\t\tCheck \n\t\t\t\t</StyledButton>\n\t\t\t\t<NotesButton \n\t\t\t\t\tid=\"notes-button\" \n\t\t\t\t\tisActive={notesActive}\n\t\t\t\t\tref={notesButton}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\thandleNavButtonClick(e);\n\t\t\t\t\t\thandleNotesClick(e);\n\t\t\t\t\t}}> \n\t\t\t\t\t<NotesIcon src={notesIcon} alt=\"Notes\" id=\"notes-icon\" isActive={notesActive} />\n\t\t\t\t\t<NotesText id=\"notes-text\" isActive={notesActive}> Notes </NotesText>\n\t\t\t\t</NotesButton>\n\t\t\t\t<SaveButton\n\t\t\t\t\tid=\"save-button\" \n\t\t\t\t\tsaved={progressSaved}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\thandleSaveClick(e);\n\t\t\t\t\t}}> \n\t\t\t\t\t<StyledButtonIcon src={progressSaved ? checkIcon : saveIcon} alt=\"Save Puzzle\"/>\n\t\t\t\t\t<StyledButtonText> {progressSaved ? \"Saved\" : \"Save\"} </StyledButtonText>\n\t\t\t\t</SaveButton>\n\t\t\t</RightButtons>\n\n\t\t\t<DaysDropdown id=\"days-dropdown\" isActive={activeDropdown === \"days\"} ref={daysDropdown}>\n\t\t\t\t{days.map(day => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DaysDropdownItem htmlFor={day} key={day} className=\"days-dropdown-item\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tclassName=\"days-dropdown-checkbox\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\t\tid={day} \n\t\t\t\t\t\t\t\tname={day} \n\t\t\t\t\t\t\t\tonChange={onCheckboxChange}\n\t\t\t\t\t\t\t\tdefaultChecked={true} />\n\t\t\t\t\t\t\t<DaysDropdownText className=\"days-dropdown-text\"> \n\t\t\t\t\t\t\t\t{day.charAt(0).toUpperCase() + day.slice(1)} \n\t\t\t\t\t\t\t</DaysDropdownText>\n\t\t\t\t\t\t</DaysDropdownItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</DaysDropdown>\n\n\t\t\t<StyledDropdown id=\"reveal-dropdown\" isActive={activeDropdown === \"reveal\"} ref={revealDropdown}>\n\t\t\t\t<StyledDropdownItem onClick={() => handleRevealClick(0)}> Square </StyledDropdownItem>\n\t\t\t\t<StyledDropdownItem onClick={() => handleRevealClick(1)}> Clue </StyledDropdownItem>\n\t\t\t\t<StyledDropdownItem onClick={() => handleRevealClick(2)}> Puzzle </StyledDropdownItem>\n\t\t\t</StyledDropdown>\n\n\t\t\t<StyledDropdown id=\"check-dropdown\" isActive={activeDropdown === \"check\"} ref={checkDropdown}>\n\t\t\t\t<StyledDropdownItem onClick={() => handleCheckClick(0)}> Square </StyledDropdownItem>\n\t\t\t\t<StyledDropdownItem onClick={() => handleCheckClick(1)}> Clue </StyledDropdownItem>\n\t\t\t\t<StyledDropdownItem onClick={() => handleCheckClick(2)}> Puzzle </StyledDropdownItem>\n\t\t\t</StyledDropdown>\n\t\t</React.Fragment>\n\t);\n};\n\nconst StyledButton = styled.button`\n\theight: 100%;\n\tfont-size: 14px;\n\tborder: none;\n\tcolor: black;\n\tpadding: 0 18px;\n\tbackground-color: ${props => props.isActive ? \"rgba(0,0,0,0.1)\" : \"transparent\"};\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: rgba(0,0,0,0.1);\n\t}\n\t&:focus {\n\t\toutline: none;\n\t}\n\t@media (max-width: 700px) {\n\t\tfont-size: 13px;\n\t\tpadding: 0 12px;\n\t}\n`;\n\nconst StyledButtonSecondary = styled.button`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 51px;\n\tborder: none;\n\theight: 100%;\n\tpadding: 1px 13px;\n\tbackground-color: transparent;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t&:focus {\n\t\toutline: none;\n\t}\n`;\n\nconst StyledButtonIcon = styled.img`\n\theight: 18px;\n\twidth: 18px;\n\tvertical-align: middle;\n\tmargin-bottom: 2px;\n`;\n\nconst StyledButtonText = styled.p`\n\ttext-align: center;\n`;\n\nconst StyledDropdown = styled.div`\n\tposition: fixed;\n\tflex-direction: column;\n\tbackground-color: white;\n\tz-index: 1;\n\tbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n\tdisplay: ${props => props.isActive? \"flex\" : \"none\"};\n`;\n\nconst StyledDropdownItem = styled.div`\n\theight: 100%;\n\tfont-size: 14px;\n\tborder: none;\n\tbackground-color: inherit;;\n\tcolor: black;\n\tpadding: 11px 15px;\n\t&:not(:last-child) {\n\t\tborder-bottom: 1px solid rgba(0,0,0,0.2);\n\t}\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: rgba(0,0,0,0.1);\n\t}\n`;\n\nconst NewPuzzleButton = styled(StyledButton)`\n\theight: auto;\n\twidth: auto;\n\tbackground-color: white;\n\tbox-shadow: 0 0 2px 0 rgba(0,0,0,0.5);\n\tborder-radius: 4px;\n\ttransition: all 200ms ease-in-out;\n\twhite-space: nowrap;\n\t&:hover {\n\t\tbox-shadow: 0 1px 5px 0 rgba(0,0,0,0.5);\n\t\ttransition: all 200ms ease-in-out;\n\t\tbackground-color: white;\n\t}\n\t&:active {\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 0 2px 0 rgba(0,0,0,0.5);\n\t\ttransition: all 100ms ease-in-out;\n\t}\n\t@media (max-width: 700px)\n\t\tmargin-left: 12px;\n\t\tmargin-right: 12px;\n\t\tpadding: 6px!important;\n`;\n\nconst DaysButton = styled(StyledButton)`\n\tpadding: 0 10px;\n\twidth: auto;\n`;\n\nconst RightButtons = styled.div`\n\tmargin: 0 10px 0 auto;\n\theight: 100%;\n\tdisplay: flex;\n`;\n\nconst NotesButton = styled(StyledButtonSecondary)`\n\tbackground-color: ${props => props.isActive ? \"#4F85E5\" : \"transparent\"};\n\tmargin-left: 10px;\n`;\n\nconst NotesIcon = styled(StyledButtonIcon)`\n\tfilter: ${props => props.isActive ? \"invert(1)\" : \"none\"};\n`;\n\nconst NotesText = styled(StyledButtonText)`\n\tcolor: ${props => props.isActive ? \"white\" : \"initial\"};\n`;\n\nconst SaveButton = styled(StyledButtonSecondary)`\n\t&:hover {\n\t\tcursor: ${props => props.saved ? \"auto\" : \"pointer\"};\n\t}\n`;\n\nconst DaysDropdown = styled(StyledDropdown)`\n\tpadding: 10px;\n`;\n\nconst DaysDropdownItem = styled.label`\n\tpadding: 10px 15px 10px 10px;\n\tdisplay: flex;\n\talign-items: center;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t&:not(:last-child) {\n\t\tborder-bottom: 1px solid rgb(200,200,200);\n\t}\n`;\n\nconst DaysDropdownText = styled.span`\n\tmargin-left: 5px;\n`;\n\nexport default SolveNav;","import React, {useState, useRef, useEffect, Fragment} from 'react';\nimport styled from 'styled-components';\nimport eraserIcon from '../../icon/eraser.svg';\nimport mirroredEraserIcon from '../../icon/flip.svg';\nimport saveIcon from '../../icon/save.svg';\nimport loadIcon from '../../icon/load.svg';\nimport checkIcon from '../../icon/check.svg';\nimport plusIcon from '../../icon/plus-circled.svg';\nimport printIcon from '../../icon/download.svg';\nimport helpIcon from '../../icon/question.svg';\nimport chevronIcon from '../../icon/chevron.svg';\n\nconst CreateNav = ({\n    savedPuzzles,\n    blankMode,\n    blankModeType,\n    handleBlankClick,\n    handleEraserTypeClick,\n    handleLoadClick,\n    handlePrintClick,\n    handleSaveClick,\n    handleNewClick,\n    handleHelpClick,\n    puzzleSaved,\n    puzzleName\n}) => {\n    const [tooltipVisible, setTooltipVisible] = useState(false);\n    const [eraserDropdownActive, setEraserDropdownActive] = useState(false);\n    const otherPuzzlesSaved = Object.keys(savedPuzzles).some(key => key !== puzzleName);\n\n    const tooltipRef = useRef(null);\n    const helpButtonRef = useRef(null);\n\n    const eraserRef = useRef(null);\n    const dropdownRef = useRef(null);\n\n    const bindTooltipPosition = () => {\n        if (helpButtonRef.current && tooltipRef.current) {\n            const buttonOffsetTop = helpButtonRef.current.offsetTop;\n            const buttonOffsetLeft = helpButtonRef.current.offsetLeft;\n            const buttonHeight = helpButtonRef.current.offsetHeight;\n            const buttonWidth = helpButtonRef.current.offsetWidth;\n            const tooltipWidth = tooltipRef.current.offsetWidth;\n\n            tooltipRef.current.style.top = `${buttonOffsetTop + buttonHeight}px`;\n            tooltipRef.current.style.left = `${buttonOffsetLeft - (tooltipWidth / 2) + (buttonWidth / 2)}px`;\n        }\n    };\n\n    const bindDropdownPosition = () => {\n        if (eraserRef.current && dropdownRef.current) {\n            const buttonOffsetTop = eraserRef.current.offsetTop;\n            const buttonOffsetLeft = eraserRef.current.offsetLeft;\n            const buttonHeight = eraserRef.current.offsetHeight;\n\n            dropdownRef.current.style.top = `${buttonOffsetTop + buttonHeight + 1}px`;\n            dropdownRef.current.style.left = `${buttonOffsetLeft}px`;\n        }\n    }\n\n    const closeDropdown = e => {\n        const target = e.target.id;\n        if (target !== \"eraser-button\"\n            && target !== \"eraser-icon\" \n            && target !== \"eraser-text\" \n            && target !== \"dropdown-trigger\" \n            && target !== \"dropdown-icon\"\n            && target !== \"eraser-dropdown\") {\n            setEraserDropdownActive(false);\n        }\n    }\n\n    useEffect(() => {\n        let resizeId;\n        const handleResize = () => {\n            clearTimeout(resizeId);\n            resizeId = setTimeout(() => {\n                bindDropdownPosition();\n                if (tooltipVisible) {\n                    bindTooltipPosition();\n                }\n            }, 500);\n        };\n\n        window.addEventListener('resize', handleResize);\n        window.addEventListener('click', closeDropdown);\n\n        if (!localStorage.getItem(\"onboardTooltipSeen\")) {\n            setTimeout(() => {\n                setTooltipVisible(true);\n                bindTooltipPosition();\n            }, 3000);\n\n            localStorage.setItem(\"onboardTooltipSeen\", \"true\");\n        }\n\n        bindDropdownPosition();\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n            window.removeEventListener(\"click\", closeDropdown);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        bindTooltipPosition();\n        bindDropdownPosition();\n    }, [savedPuzzles]);\n\n    return (\n        <React.Fragment>\n        <Button onClick={handleNewClick}>\n            <ButtonIcon \n                src={plusIcon} \n                alt=\"New Puzzle\" />\n            <ButtonText> New Puzzle </ButtonText>\n        </Button>\n        <ButtonSet>\n            <Button onClick={handleHelpClick} ref={helpButtonRef}>\n                <HelpIcon \n                    src={helpIcon}\n                    alt=\"Help\" />\n            </Button>\n\n            <BlankButton\n                id=\"eraser-button\"\n                isActive={blankMode}\n                ref={eraserRef}\n                onClick={handleBlankClick}>\n                <BlankIcon \n                    id=\"eraser-icon\"\n                    src={blankModeType === \"regular\" ? eraserIcon : mirroredEraserIcon}\n                    rotate={(blankModeType === \"mirrored\").toString()}\n                    isActive={blankMode}\n                    alt=\"Eraser\" />\n\n                <BlankText id=\"eraser-text\" isActive={blankMode}> Eraser </BlankText>\n            </BlankButton>\n            <DropdownChevron \n                id=\"dropdown-trigger\" \n                onClick={() => setEraserDropdownActive(!eraserDropdownActive)}>\n                <ChevronIcon id=\"dropdown-icon\" src={chevronIcon}/>\n            </DropdownChevron>\n\n            {otherPuzzlesSaved && \n                <Button onClick={() => handleLoadClick(null)}>\n                    <ButtonIcon \n                        src={loadIcon}\n                        alt=\"Load Puzzle\" />\n                    <ButtonText> Load </ButtonText>\n                </Button> \n            }\n\n            <Button\n                saved={puzzleSaved}\n                onClick={() => handleSaveClick(null, false)}>\n                <ButtonIcon\n                    src={puzzleSaved ? checkIcon : saveIcon}\n                    alt=\"Save Puzzle\" />\n                <ButtonText> {puzzleSaved ? \"Saved\" : \"Save\"} </ButtonText>\n            </Button>\n\n            <Button onClick={handlePrintClick}>\n                <ButtonIcon src={printIcon} alt=\"Download\" />\n                <ButtonText> Download </ButtonText>\n            </Button>\n        </ButtonSet>\n\n        <EraserDropdown \n            id=\"eraser-dropdown\"\n            isActive={eraserDropdownActive} \n            ref={dropdownRef}>\n            <EraserOption onClick={() => handleEraserTypeClick(\"regular\")}>\n                <OptionActiveIndicator isActive={blankModeType === \"regular\"}/>\n                <OptionIcon src={eraserIcon} />\n                <OptionText>Regular</OptionText>\n            </EraserOption>\n            <EraserOption onClick={() => handleEraserTypeClick(\"mirrored\")}>\n                <OptionActiveIndicator isActive={blankModeType === \"mirrored\"}/>\n                <OptionIcon rotate={\"true\"} src={mirroredEraserIcon} />\n                <OptionText>Mirrored</OptionText>\n            </EraserOption>\n        </EraserDropdown>\n\n        {tooltipVisible && \n            <Fragment>\n                <Tooltip ref={tooltipRef}>\n                    <p>Need help getting started? Click here for some useful tips!</p>\n                    <TooltipButton onClick={() => setTooltipVisible(false)}>Got it</TooltipButton>\n                </Tooltip>\n\n                <Overlay/>\n            </Fragment>\n        }\n        </React.Fragment>\n    );\n}\n\nconst ButtonSet = styled.div`\n    height: 100%;\n    margin: 0 20px 0 auto;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Button = styled.button`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    height: 100%;\n    width: 80px;\n    padding: 6px 20px;\n    white-space: nowrap;\n    background-color: transparent;\n    pointer-events: ${props => props.saved ? \"none\" : \"inherit\"};\n    &:hover {\n\t\tcursor: ${props => props.saved ? \"auto\" : \"pointer\"};\n\t}\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ButtonIcon = styled.img`\n    height: 20px;\n    width: 20px;\n    vertical-align: middle;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst ButtonText = styled.p`\n    text-align: center;\n    color: #555555;\n    margin-top: 1px;\n`;\n\nconst BlankButton = styled(Button)`\n    width: 60px;\n    background-color: ${props => props.isActive ? \"#4F85E5\" : \"transparent\"};\n`;\n\nconst BlankIcon = styled(ButtonIcon)`\n    filter: ${props => props.isActive ? \"invert(1)\" : \"initial\"};\n    transform: ${props => props.rotate === \"true\" ? \"rotate(45deg)\" : \"none\"};\n`;\n\nconst BlankText = styled(ButtonText)`\n    color: ${props => props.isActive ? \"white\" : \"#555555\"};\n`;\n\nconst HelpIcon = styled(ButtonIcon)`\n    height: 16px;\n    width: 16px;\n`;\n\nconst DropdownChevron = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 7px;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst ChevronIcon = styled.img`\n    height: 10px;\n    width: 10px;\n`;\n\nconst EraserDropdown = styled.ul`\n    position: absolute;\n    z-index: 1;\n    display: flex;\n    flex-direction: column;\n    top: 100px;\n    left: 100px;\n    background-color: white;\n    list-style-type: none;\n    position: fixed;\n\tbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n\tdisplay: ${props => props.isActive? \"flex\" : \"none\"};\n`;\n\nconst EraserOption = styled.li`\n    position: relative;\n    padding: 11px 15px;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(0,0,0,0.1);\n    }\n`;\n\nconst OptionIcon = styled.img`\n    height: 16px;\n    width: 16px;\n    margin-right: 10px;\n    transform: ${props => props.rotate === \"true\" ? \"rotate(45deg)\" : \"none\"};\n`;\n\nconst OptionText = styled.p`\n    font-size: 11px;\n`;\n\nconst OptionActiveIndicator = styled.div`\n    height: 100%;\n    width: 5px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: ${props => props.isActive ? \"#a7d8ff\" : \"transparent\"};\n`;\n\nconst Tooltip = styled.div`\n    position: absolute;\n    max-width: 200px;\n    border-radius: 6px;\n    padding: 15px;\n    background-color: #FFF;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    z-index: 2;\n    top: 0;\n    left: 0;\n    &:before {\n        content: \"\";\n        top: -5px;\n        left: calc(50% - 5px);\n        position: absolute;\n        width: 0; \n        height: 0; \n        border-left: 5px solid #000;\n        border-right: 5px solid #000;\n        border-bottom: 5px solid #FFF;\n        background-color: #FFF;\n    }\n`;\n\nconst TooltipButton = styled.button`\n    border: none;\n    border-radius: 14px;\n    background-color: #a7d8ff;\n    font-weight: bold;\n    font-size: 13px;\n    padding: 5px 10px;\n    margin-top: 10px;\n    width: 70px;\n    flex-shrink: 1;\n    height: 30px;\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.5);\n    &:hover {\n        cursor: pointer;\n    }\n    &:active {\n        box-shadow: 0 1px 1px 0 rgba(0,0,0,0.5);\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst Overlay = styled.div`\n    height: 100vh;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    background-color: rgb(0,0,0);\n    transition: opacity 300ms ease-in-out;\n    opacity: 0.7;\n`;\n\nexport default CreateNav;","import React from 'react';\nimport SolveNav from '../solve/SolveNav';\nimport CreateNav from '../create/CreateNav';\nimport styled from 'styled-components';\nimport menuIcon from '../../icon/menu.svg';\n\nexport const NavWrapper = (props) => {\n    return (\n        <StyledNavWrapper>\n            <Menu onClick={props.toggleSidebarOpen}>\n                <MenuIcon src={menuIcon} alt=\"Menu\" id=\"menu\"/>\n            </Menu>\n\n            { props.mode === \"solve\" && <SolveNav {...props} /> } \n            { props.mode === \"create\" && <CreateNav {...props} /> }\n        </StyledNavWrapper>\n    );\n}\n\nconst StyledNavWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n\tborder-bottom: 1px solid rgba(0,0,0,0.2);\n\tdisplay: flex;\n    align-items: center;\n    @media (max-width: 700px) {\n        font-size: 13px;\n    }\n`;\n\nconst Menu = styled.button`\n    border: none;\n    margin: 0 20px;\n    background-color: transparent;\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst MenuIcon = styled.img`\n    height: 20px;\n    width: 20px;\n    border: none;\n`;","import React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst GridCell = React.memo(({ active, activeClue, correct, incorrect, revealed, note, char, label, rowLength}) => {\n\treturn (\n\t\t<StyledGridCell\n\t\t\tactive={active}\n\t\t\tactiveClue={activeClue}\n\t\t\tdisabled={char === false}>\n\n\t\t\t<SpecialCellMarker\n\t\t\t\trevealed={revealed}\n\t\t\t\tincorrect={incorrect}\n\t\t\t\tisSunday={rowLength === 21}>\n\t\t\t</SpecialCellMarker>\n\n\t\t\t<GridCellLabel rowLength={rowLength}> \n\t\t\t\t{label} \n\t\t\t</GridCellLabel>\n\n\t\t\t<GridCellText\n\t\t\t\tcorrect={correct}\n\t\t\t\tnote={note}\n\t\t\t\trowLength={rowLength}> \n\t\t\t\t{char ? char.toUpperCase() : \"\"}\n\t\t\t</GridCellText>\n\t\t</StyledGridCell>\n\t);\n})\n\nconst StyledGridCell = styled.div`\n\theight: 100%;\n\twidth: 100%;\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${props => {\n\t\tif (props.disabled) {\n\t\t\treturn \"#000000\";\n\t\t} else if (props.active) {\n\t\t\treturn \"#ffda00\";\n\t\t} else if (props.activeClue) {\n\t\t\treturn \"#a7d8ff\";\n\t\t} else {\n\t\t\treturn \"initial\";\n\t\t}\n\t}}\n`;\n\nconst SpecialCellMarker = styled.span`\n\tposition: absolute;\n\tdisplay: ${props => (props.revealed || props.incorrect) ? \"block\" : \"none\"};\n\t${props => props.revealed && \n\t\tcss`\n\t\t\theight: 0;\n\t\t\twidth: 0;\n\t\t\ttop: 0;\n\t\t\tleft: ${props.isSunday ? \"14px\" : \"21px\"};\n\t\t\tborder-top: ${props.isSunday ? \"4px\" : \"5px\"} solid #E63333;\n\t\t\tborder-right: ${props.isSunday ? \"4px\" : \"5px\"} solid #E63333;\n\t\t\tborder-bottom: ${props.isSunday ? \"4px\" : \"5px\"} solid transparent;\n\t\t\tborder-left: ${props.isSunday ? \"4px\" : \"5px\"} solid transparent;\n\t\t\t@media (max-width: 1000px) {\n\t\t\t\tleft: ${props.isSunday ? \"10px\" : \"16px\"};\n\t\t\t}\n\t\t\t@media (max-width: 650px) {\n\t\t\t\tleft: ${props.isSunday ? \"8px\" : \"13px\"};\n\t\t\t}\n\t\t`};\n\t${props => props.incorrect &&\n\t\tcss`\n\t\t\theight: 2px;\n\t\t\twidth: ${props.isSunday ? \"30px\" : \"45px\"};\n\t\t\ttop: ${props.isSunday ? \"11px\" : \"14px\"};\n\t\t\tleft: ${props.isSunday ? \"-5px\" : \"-7px\"};\n\t\t\tbackground-color: #E63333;\n\t\t\ttransform: rotate(-45deg);\n\t\t\t@media (max-width: 1000px) {\n\t\t\t\twidth: ${props.isSunday ? \"25px\" : \"37px\"};\n\t\t\t\tleft: ${props.isSunday ? \"-3px\" : \"-5px\"};\n\t\t\t\ttop: ${props.isSunday ? \"8px\" : \"12px\"};\n\t\t\t}\n\t\t\t@media (max-width: 650px) {\n\t\t\t\twidth: ${props.isSunday ? \"21px\" : \"32px\"};\n\t\t\t\tleft: ${props.isSunday ? \"-2px\" : \"-5px\"};\n\t\t\t\ttop: ${props.isSunday ? \"7px\" : \"11px\"};\n\t\t\t}\n\t\t`};\n`;\n\nconst GridCellLabel = styled.span`\n\tfont-size: ${props => props.rowLength * -0.5 + 20}px;\n\tposition: absolute;\n\ttop: ${props => props.rowLength < 10 ? 1.5 : 0}px;\n\tleft: ${props => props.rowLength < 15 ? 1 : 0}px;\n\tline-height: ${props => props.rowLength * -0.5 + 21.5}px;\n\tletter-spacing: -1px;\n\t@media (max-width: 1000px) {\n\t\tfont-size: ${props => props.rowLength * -0.5 + 18}px;\n\t\tline-height: ${props => props.rowLength * -0.5 + 19}px;\n\t\ttop: 0;\n\t\tleft: ${props => props.rowLength < 16 ? 0.5 : 0}px;\n\t}\n\t@media (max-width: 650px) {\n\t\tfont-size: ${props => props.rowLength * -0.5 + 18}px;\n\t\tline-height: ${props => props.rowLength * -0.5 + 18.5}px;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n`;\n\nconst GridCellText = styled.span`\n\tvertical-align: middle;\n\ttext-align: center;\n\tfont-weight: 600;\n\tpadding-top: 7px;\n\tfont-size: ${props => props.rowLength * -1.2 + 38.5}px;\n\tcolor: ${props => {\n\t\tif (props.correct) {\n\t\t\treturn \"#2860D8\";\n\t\t} else if (props.note) {\n\t\t\treturn \"#909090\";\n\t\t} else {\n\t\t\treturn \"initial\";\n\t\t}\n\t}};\n\t@media (max-width: 1000px) {\n\t\tfont-size: ${props => props.rowLength * -1.2 + 38}px;\n\t}\n\t@media (max-width: 650px) {\n\t\tfont-size: ${props => props.rowLength * -1.2 + 36}px;\n\t}\n`;\n\nexport default GridCell;","import React from 'react';\nimport styled from 'styled-components';\nimport GridCell from './GridCell';\n\nconst GridRow = ({\n\trowNumber,\n\tgridRow,\n\tgridRowLabels,\n\trowLength,\n\tactiveCell,\n\tactiveClueCells,\n\tcorrectCells,\n\tincorrectCells,\n\trevealedCells,\n\tnoteCells,\n\thandleCellClick\n}) => {\n\treturn (\n\t\t<StyledGridRow rowLength={rowLength}>\n\t\t\t{[...Array(gridRow.length)].map((num, i) => \n\t\t\t\t<GridCellContainer \n\t\t\t\t\tkey={[rowNumber, i]}\n\t\t\t\t\trowLength={rowLength}\n\t\t\t\t\tonClick={e => handleCellClick(e, rowNumber * rowLength + i)} >\n\t\t\t\t\t<GridCell \n\t\t\t\t\t\tactive={isActiveCell(i, rowNumber, activeCell, rowLength)}\n\t\t\t\t\t\tactiveClue={isRelevantCell(activeClueCells, i, rowNumber, rowLength)}\n\t\t\t\t\t\tcorrect={isRelevantCell(correctCells, i, rowNumber, rowLength)}\n\t\t\t\t\t\tincorrect={isRelevantCell(incorrectCells, i, rowNumber, rowLength)}\n\t\t\t\t\t\trevealed={isRelevantCell(revealedCells, i, rowNumber, rowLength)}\n\t\t\t\t\t\tnote={isRelevantCell(noteCells, i, rowNumber, rowLength)}\n\t\t\t\t\t\tlabel={getCellLabel(i, rowLength, gridRowLabels)} \n\t\t\t\t\t\trowLength={rowLength}\n\t\t\t\t\t\tchar={gridRow[i]} />\n\t\t\t\t</GridCellContainer>\n\t\t\t)}\n\t\t</StyledGridRow>\n\t)\n}\n\nconst isActiveCell = (col, row, activeCell, rowLength) => {\n\treturn (row === Math.floor(activeCell / rowLength)) && (col === activeCell % rowLength);\n}\n\nconst isRelevantCell = (cells, col, row, rowLength) => {\n\treturn cells.some(cell => Math.floor(cell / rowLength) === row && cell % rowLength === col);\n}\n\nconst getCellLabel = (col, rowLength, labels) => {\n\tconst label = labels.find(label => label[0] % rowLength === col);\n\treturn label ? label[1] : \"\";\n}\n\nconst StyledGridRow = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\theight: ${props => 100 / props.rowLength}%;\n\t&:last-child {\n\t\tborder-bottom: 1px solid #383838;\n\t\theight: calc(${props => 100 / props.rowLength}% + 1px);\n\t}\n`;\n\nconst GridCellContainer = styled.div`\n\theight: 100%;\n\tborder-top: 1px solid #383838;\n\tborder-left: 1px solid #383838;\n\twidth: ${props => 100 / props.rowLength + \"%\"};\n\t&:nth-child(${props => props.rowLength}n) {\n\t\tborder-right: 1px solid #383838;\n\t}\n`;\n\nexport default GridRow;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GridRow from './GridRow';\n\nconst Grid = ({\n\tgrid, \n\tactiveCell, \n\tactiveClueCells, \n\tcorrectCells, \n\tincorrectCells, \n\trevealedCells, \n\tnoteCells,\n\tlabels, \n\trowLength, \n\tblankMode,\n\thandleCellClick\n}) => {\n\treturn (\n\t\t<GridContainer shadow={blankMode}>\n\t\t\t{[...Array(rowLength)].map((num, i) => \n\t\t\t\t<GridRow \n\t\t\t\t\tkey={i} \n\t\t\t\t\trowNumber={i}\n\t\t\t\t\tgridRow={grid.slice(i * rowLength, i * rowLength + rowLength)}\n\t\t\t\t\tgridRowLabels={findGridRowLabels(labels, i, rowLength)}\n\t\t\t\t\trowLength={rowLength}\n\t\t\t\t\tactiveCell={activeCell}\n\t\t\t\t\tactiveClueCells={findRowsCells(activeClueCells, i, rowLength)}\n\t\t\t\t\tcorrectCells={correctCells ? findRowsCells(correctCells, i, rowLength) :  []}\n\t\t\t\t\tincorrectCells={incorrectCells ? findRowsCells(incorrectCells, i, rowLength) : []}\n\t\t\t\t\trevealedCells={revealedCells ? findRowsCells(revealedCells, i, rowLength) : []}\n\t\t\t\t\tnoteCells={noteCells ? findRowsCells(noteCells, i, rowLength) : []}\n\t\t\t\t\thandleCellClick={handleCellClick} />\n\t\t\t)}\n\t\t</GridContainer>\n\t);\n};\n\nconst findRowsCells = (cells, row, rowLength) => cells.filter(cell => Math.floor(cell / rowLength) === row);\n\nconst findGridRowLabels = (labels, row, rowLength) => labels.filter(label => Math.floor(label[0] / rowLength) === row);\n\nconst GridContainer = styled.div`\n\twidth: 100%;\n\theight: 480px;\n\tmargin-bottom: 10px;\n\tuser-select: none;\n\tbox-shadow: ${props => props.shadow ? \"0px 5px 6px rgba(0,0,0,0.6)\" : \"none\"};\n\ttransition: box-shadow 0.2s ease-out;\n\t@media (max-width: 1000px) {\n\t\theight: 400px;\n\t}\n\t@media (max-width: 650px) {\n\t\theight: 350px;\n\t}\n`;\n\nexport default Grid;\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\nconst CluesListItem = React.memo(({clueNum, clueText, isActive, isAltDirectionActive, isGreyed, handleClueClick, handleClueInput, mode}) => {\n\treturn (\n\t\t<StyledClueListItem \n\t\t\tid={clueNum}\n\t\t\tclassName={\"clues-list-item\"}\n\t\t\tisActive={isActive}\n\t\t\tisGreyed={isGreyed} \n\t\t\tonClick={e => handleClueClick(e, clueNum)}>\n\n\t\t\t<ClueSideTab isAltDirectionActive={isAltDirectionActive}></ClueSideTab>\n\n\t\t\t<ClueLabel>\n\t\t\t\t{clueNum.replace(/\\D+/g, '')}\n\t\t\t</ClueLabel>\n\n\t\t\t<ClueText clueText={clueText}>\n\t\t\t\t{mode === \"create\" \n\t\t\t\t\t? <ClueTextInput \n\t\t\t\t\t\tplaceholder=\"Add clue\"\n\t\t\t\t\t\tvalue={clueText}\n\t\t\t\t\t\tisActive={isActive}\n\t\t\t\t\t\tdata-clue-num={clueNum}\n\t\t\t\t\t\tonChange={handleClueInput} />\n\t\t\t\t\t: clueText} \n\t\t\t</ClueText>\n\t\t</StyledClueListItem>\n\t);\n})\n\nconst StyledClueListItem = styled.li`\n\tfont-size: 14px;\n\tdisplay: flex;\n\tline-height: 1.5;\n\tbackground-color: ${props => props.isActive ? \"#a7d8ff!important\" : \"initial\"};\n\tcolor: ${props => props.isGreyed ? \"#808080\" : \"initial\"};\n\t&:hover {\n\t\tbackground-color: rgba(167, 216, 255, 0.25);\n\t\tcursor: pointer;\n\t}\n`;\n\nconst ClueSideTab = styled.span`\n\tmin-width: 10px;\n\tbackground-color: ${props => props.isAltDirectionActive ? \"#a7d8ff!important\" : \"initial\"};\n`;\n\nconst ClueLabel = styled.span`\n\tfont-weight: bold;\n\tmin-width: 25px;\n\ttext-align: right;\n\tpadding: 4px;\n`;\n\nconst ClueText = styled.span`\n\tmargin-left: 3px;\n\tpadding: 4px 8px 4px 4px;\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tfont-style: ${props => props.clueText.includes(\"*\") ? \"italic\" : \"normal\"};\n`;\n\nconst ClueTextInput = styled(({isActive, ...rest}) => <TextareaAutosize {...rest}/>)`\n\tbackground-color: transparent;\n\tborder: none;\n\tfont-size: 14px;\n\theight: 18px;\n\twidth: 100%;\n\tdisplay: block;\n\tresize: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t&::placeholder {\n\t\tcolor: #888;\n\t\topacity: ${props => props.isActive ? \"1\" : \"0\"};\n\t}\n`;\n\nexport default CluesListItem;","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport CluesListItem from './CluesListItem';\n\nconst CluesListColumn = ({\n\tmode,\n\tclues,\n\tgreyedClues,\n\tactiveClue,\n\taltDirectionActiveClue,\n\thandleClearClick,\n\thandleClueClick,\n\thandleClueInput,\n\tlabel\n}) => {\n\tconst listColumnNode = useRef();\n\tconst listItems = useRef();\n\n\tuseEffect(() => {\n\t\tlistColumnNode.current = document.querySelector(`#${label}`);\n\t\tlistItems.current = Array.from(document.querySelectorAll(`#${label} .clues-list-item`));\n\t}, [label]);\n\n\tuseEffect(() => {\n\t\t// get top offset of active clue list item, scroll to it\n\t\tconst activeListItem = listItems.current.find(item => item.id === Object.keys(activeClue)[0]);\n\t\tconst altActiveListItem = listItems.current.find(item => item.id === Object.keys(altDirectionActiveClue)[0]);\n\n\t\tconst listItemOffset = activeListItem ? activeListItem.offsetTop - listColumnNode.current.offsetTop : null;\n\t\tconst altListItemOffset = altActiveListItem ? altActiveListItem.offsetTop - listColumnNode.current.offsetTop : null;\n\n\t\tif (listItemOffset !== null) {\n\t\t\tlistColumnNode.current.scrollTo({top: listItemOffset, behavior: 'smooth'});\n\t\t} else if (altListItemOffset !== null) {\n\t\t\tlistColumnNode.current.scrollTo({top: altListItemOffset, behavior: 'smooth'});\n\t\t}\n\t}, [activeClue, altDirectionActiveClue, mode]);\n\n\treturn (\n\t\t<CluesListColumnContainer>\n\t\t\t<CluesListColumnHeader>\n\t\t\t\t<HeaderLabel> {label} </HeaderLabel>\n\t\t\t\t{mode === \"create\" && \n\t\t\t\t\t<HeaderClearLink onClick={() => handleClearClick(label)}> Clear </HeaderClearLink>}\n\t\t\t</CluesListColumnHeader>\n\t\t\t<StyledCluesListColumn id={label}>\n\t\t\t\t{Object.keys(clues).map(clueNum => \n\t\t\t\t\t<CluesListItem \n\t\t\t\t\t\tkey={clueNum} \n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\tclueNum={clueNum} \n\t\t\t\t\t\tclueText={clues[clueNum].clue}\n\t\t\t\t\t\tisActive={Object.keys(activeClue)[0] === clueNum}\n\t\t\t\t\t\tisGreyed={greyedClues.indexOf(clueNum) >= 0}\n\t\t\t\t\t\tisAltDirectionActive={Object.keys(altDirectionActiveClue)[0] === clueNum}\n\t\t\t\t\t\thandleClueClick={handleClueClick} \n\t\t\t\t\t\thandleClueInput={handleClueInput} />\n\t\t\t\t)}\n\t\t\t</StyledCluesListColumn>\n\t\t</CluesListColumnContainer>\n\t);\n}; \n\nconst CluesListColumnContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\t\n\tmargin-right: 10px;\n\t@media (max-width: 920px) {\n\t\theight: 46%;\n\t}\n`;\n\nconst CluesListColumnHeader = styled.div`\n\tdisplay: flex;\n\talign-items: flex-end;\n\tpadding: 18px 0 5px 0;\n\tborder-bottom: 1px solid rgba(0,0,0,0.2);\n`;\n\nconst HeaderLabel = styled.p`\n\tfont-weight: bold;\n`;\n\nconst HeaderClearLink = styled.button`\n\tfont-size: 12px;\n\tfont-weight: bold;\n\tcolor: #0b7b99;\n\tborder: none;\n\tbackground-color: transparent;\n\tmargin: 0 10px 0 auto;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t&:hover {\n\t\tcursor: pointer\n\t}\n`;\n\nconst StyledCluesListColumn = styled.ul`\n\toverflow-y: scroll;\n\tmax-height: 85%;\n\tborder-bottom: 1px solid rgba(0,0,0,0.2);\n`;\n\nexport default CluesListColumn;","import React from 'react';\nimport styled from 'styled-components';\n\nimport CluesListColumn from './CluesListColumn';\n\nconst Clues = ({\n\tclues, \n\tactiveClue, \n\taltDirectionActiveClue, \n\tgreyedClues, \n\thandleClearClick,\n\thandleClueClick, \n\thandleClueInput, \n\tmode\n}) => {\n\treturn (\n\t\t<CluesContainer>\n\t\t\t<CluesListColumn \n\t\t\t\tmode={mode}\n\t\t\t\tclues={separateAcrossDownClues(clues)[0]} \n\t\t\t\tgreyedClues={greyedClues ? separateAcrossDownGreyedClues(greyedClues)[0] : []}\n\t\t\t\tactiveClue={activeClue}\n\t\t\t\taltDirectionActiveClue={altDirectionActiveClue}\n\t\t\t\thandleClearClick={handleClearClick}\n\t\t\t\thandleClueClick={handleClueClick}\n\t\t\t\thandleClueInput={handleClueInput}\n\t\t\t\tlabel=\"Across\" />\n\t\t\t<CluesListColumn \n\t\t\t\tmode={mode}\n\t\t\t\tclues={separateAcrossDownClues(clues)[1]} \n\t\t\t\tgreyedClues={greyedClues ? separateAcrossDownGreyedClues(greyedClues)[1] : []}\n\t\t\t\tactiveClue={activeClue}\n\t\t\t\taltDirectionActiveClue={altDirectionActiveClue}\n\t\t\t\thandleClearClick={handleClearClick}\n\t\t\t\thandleClueClick={handleClueClick}\n\t\t\t\thandleClueInput={handleClueInput}\n\t\t\t\tlabel=\"Down\" />\n\t\t</CluesContainer>\n\t);\n};\n\nconst separateAcrossDownClues = (clues) => {\n\tlet separatedClues = [];\n\t[\"a\", \"d\"].forEach(clueType => {\n\t\tseparatedClues.push(\n\t\t\tObject.keys(clues)\n\t\t\t\t.filter(clue => clue.toLowerCase().includes(clueType))\n\t\t\t\t.reduce((res,key) => {\n\t\t\t\t\tres[key] = clues[key]; \n\t\t\t\t\treturn res\n\t\t\t\t}, {})\n\t\t);\n\t});\n\n\treturn separatedClues;\n};\n\nconst separateAcrossDownGreyedClues = (greyedClues) => {\n\tlet separatedClues = [];\n\t[\"a\", \"d\"].forEach(clueType => {\n\t\tseparatedClues.push(greyedClues.filter(clue => clue.toLowerCase().includes(clueType)));\n\t});\n\n\treturn separatedClues;\n};\n\nconst CluesContainer = styled.div`\n\tmin-height: 540px;\n\theight: 100%;\n\tdisplay: flex;\n\tmargin-right: 5px;\n\tmax-width: 600px;\n\t@media (max-width: 920px) {\n\t\tflex-direction: column;\n\t\tmax-width: 480px;\n\t}\n`;\n\nexport default Clues;","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\nconst getBannerText = clue => {\n\treturn clue.clue\n\t\t.replace(\"&amp;\", \"&\")\n\t\t.replace(\"&reg;\", \"®\");\n}\n\nconst ClueBanner = ({label, clue = {clue: \"\"}, handleClueInput, mode}) => {\n\tconst clueText = getBannerText(clue);\n\treturn (\n\t\t<StyledClueBanner>\n\t\t\t<ClueBannerLabel> {label} </ClueBannerLabel>\n\t\t\t<ClueBannerText text={clue.clue}>\n\t\t\t\t{mode === \"create\" \n\t\t\t\t\t? <ClueBannerTextInput \n\t\t\t\t\t\tplaceholder=\"Add clue\"\n\t\t\t\t\t\tvalue={clueText}\n\t\t\t\t\t\tdata-clue-num={label}\n\t\t\t\t\t\tonChange={handleClueInput} />\n\t\t\t\t\t: clueText}  \n\t\t\t</ClueBannerText>\n\t\t</StyledClueBanner>\n\t);\n}\n\nconst StyledClueBanner = styled.div`\n\twidth: 100%;\n\tbackground-color: #dceffe;\n\tborder-radius: 2px;\n\tdisplay: flex;\n\talign-items: center;\n\tline-height: 1.3;\n\tpadding: 5px;\n\tmargin: 10px 0;\n\theight: 50px;\n`;\n\nconst ClueBannerLabel = styled.span`\n\tfont-weight: bold;\n\tfont-size: 16px;\n\tpadding: 0 10px;\n`;\n\nconst ClueBannerText = styled.span`\n\tfont-size: 16px;\n\tpadding: 5px;\n\tflex: 1;\n\tfont-style: ${props => (props.text.includes(\"*\") ? \"italic\" : \"normal\")}\n`;\n\nconst ClueBannerTextInput = styled(TextareaAutosize)`\n\tbackground-color: transparent;\n\tborder: none;\n\tfont-size: 14px;\n\theight: 18px;\n\twidth: 100%;\n\tdisplay: block;\n\tresize: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t&::placeholder {\n\t\tcolor: #888;\n\t}\n`;\n\nexport default ClueBanner;","import React from 'react';\nimport styled from 'styled-components';\n\nconst makePuzzleTitle = (date) => {\n\tif (!date) {\n\t\treturn \"\";\n\t}\n\n\tconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\tconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\tconst [month, day, year] = date.split(\"/\");\n\tconst dateObj = new Date(year, month - 1, day);\n\n\tconst dayStr = days[dateObj.getDay()];\n\tconst dateStr = dateObj.getDate().toString();\n\tconst monthStr = months[dateObj.getMonth()];\n\tconst yearStr = dateObj.getFullYear().toString();\n\n\treturn [dayStr, `${monthStr} ${dateStr}, ${yearStr}`]\n}\n\nconst PuzzleHeader = ({date, author}) => {\n\tconst [day, formattedDate] = makePuzzleTitle(date);\n\n\treturn (\n\t\t<StyledPuzzleHeader> \n\t\t\t<div>\n\t\t\t\t<PuzzleDay> {day} </PuzzleDay>\n\t\t\t\t<span> {formattedDate} </span>\n\t\t\t</div>\n\t\t\t<PuzzleAuthor> {\"by \" + author} </PuzzleAuthor>\n\t\t</StyledPuzzleHeader>\n\t);\n}\n\nconst StyledPuzzleHeader = styled.div`\n\twidth: 100%;\n\tmargin: 10px 0 14px 0;\n\tfont-size: 20px;\n\tdisplay: flex;\n\talign-items: flex-end;\n\t@media (max-width: 1000px) {\n\t\tflex-direction: column;\n\t\talign-items: flex-start;\n\t}\n`;\n\nconst PuzzleDay = styled.span`\n\tfont-weight: bold;\n\tmargin-right: 8px;\n`;\n\nconst PuzzleAuthor = styled.span`\n\tmargin-left: auto;\n\tfont-style: italic;\n\tfont-size: 15px;\n\tmax-width: 220px;\n\ttext-align: right;\n\t@media (max-width: 1000px) {\n\t\ttext-align: left;\n\t\tmargin-left: 0;\n\t}\n`;\n\nexport default PuzzleHeader;","import React from 'react';\nimport {formatTime} from '../../util/utilities';\nimport styled from 'styled-components';\n\nconst getModalText = (hasStarted, paused, timerValue, finished, correct) => {\n\tif (!hasStarted) {\n\t\treturn \"Ready to start solving?\";\n\t} else if (paused && !finished) {\n\t\treturn `Your game is paused at ${formatTime(timerValue)}`;\n\t} else if (finished) {\n\t\tif (!correct) {\n\t\t\treturn \"Almost there! One or more squares are incorrect.\";\n\t\t} else {\n\t\t\treturn `Congrats! You finished in ${formatTime(timerValue)}!`;\n\t\t}\n\t} \n}\n\nconst getModalButtonText = (paused, finished, correct) => {\n\tif (paused && !finished) {\n\t\treturn \"RESUME\";\n\t} else if (finished && !correct) {\n\t\treturn \"KEEP TRYING\";\n\t} else {\n\t\treturn \"OK\";\n\t}\n}\n\nconst Modal = ({hasStarted, loading, paused, timerValue, finished, correct, handleModalButtonClick}) => {\n\treturn (\n\t\t<ModalOverlay hidden={(!paused && hasStarted) || loading}>\n\t\t\t<ModalContent>\n\t\t\t\t<ModalText> \n\t\t\t\t\t{getModalText(hasStarted, paused, timerValue, finished, correct)}\n\t\t\t\t</ModalText>\n\t\t\t\t<ModalButton onClick={handleModalButtonClick}>\n\t\t\t\t\t{getModalButtonText(paused, finished, correct)}\n\t\t\t\t</ModalButton>\n\t\t\t</ModalContent>\n\t\t</ModalOverlay>\n\t);\n}\n\nconst ModalOverlay = styled.div`\n\talign-items: center;\n\tjustify-content: center;\n\tposition: absolute;\n\theight: 100vh;\n\twidth: 100vw;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 0;\n\tleft: 0;\n\tbackground-color: rgba(255,255,255,0.5);\n\tdisplay: ${props => props.hidden ? \"none\" : \"flex\"};\n`;\n\nconst ModalContent = styled.div`\n\tposition: absolute;\n\theight: 300px;\n\twidth: 400px;\n\tbackground-color: white;\n\tbox-shadow: 0px 2px 4px 0 rgba(0,0,0,0.5);\n\tborder-radius: 5px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 5px;\n`;\n\nconst ModalText = styled.p`\n\ttext-align: center;\n\tfont-size: 20px;\n\tfont-weight: bold;\n\tmargin-bottom: 20px;\n\tpadding: 0 30px;\n\tline-height: 28px;\n`;\n\nconst ModalButton = styled.button`\n\tmin-width: 120px;\n\tborder: none;\n\tbackground-color: #4F85E5;\n\tcolor: white;\n\tborder-radius: 20px;\n\tline-height: 20px;\n\tfont-size: 16px;\n\tfont-weight: bold;\n\tbox-shadow: 0 2px 2px 0 rgba(0,0,0,0.8);\n\tpadding: 10px 15px;\n\t&:hover {\n\t\tcursor: pointer;\n    \tbox-shadow: 0 2px 4px 0 rgba(0,0,0,1);\n\t}\n\t&:active {\n\t\toutline: none;\n\t}\n`;\n\nexport default Modal;","import React, { Component, Fragment, createRef } from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport styled from 'styled-components';\nimport { fetchRandomData } from '../../util/datautils';\nimport * as utils from '../../util/utilities';\nimport * as gridUtils from '../../util/gridutils';\nimport * as clueUtils from '../../util/clueutils';\n\nimport { NavWrapper } from '../common/NavWrapper';\nimport Grid from '../common/grid/Grid';\nimport Clues from '../common/clues/Clues';\nimport ClueBanner from '../common/clues/ClueBanner';\nimport PuzzleHeader from './PuzzleHeader';\nimport SolveModal from './SolveModal';\n\nclass Solve extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfinishedGrid: [],\n\t\t\tgrid: [],\n\t\t\tclues: {},\n\t\t\trowLength: 15,\n\t\t\tactiveClue: null,\n\t\t\taltDirectionActiveClue: null,\n\t\t\tactiveCell: null,\n\t\t\tactiveClueCells: null,\n\t\t\tincorrectCells: [],\n\t\t\tcorrectCells: [],\n\t\t\trevealedCells: [],\n\t\t\tnoteCells: [],\n\t\t\tgreyedClues: [],\n\t\t\tpuzzleDate: null,\n\t\t\tpuzzleAuthor: null,\n\t\t\tisAcross: true,\n\t\t\tnotesMode: false,\n\t\t\tprogressSaved: false,\n\t\t\tignoredDays: [],\n\t\t\tlabels: [],\n\t\t\tloading: true,\n\t\t\tpaused: false,\n\t\t\ttimerValue: 0,\n\t\t\thasStarted: false,\n\t\t\tshouldCheckFinishedGrid: true,\n\t\t\tfinished: false,\n\t\t\tcorrect: false\n\t\t}\n\n\t\tthis.handleCellClick = this.handleCellClick.bind(this);\n\t\tthis.handleClueClick = this.handleClueClick.bind(this);\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\n\t\tthis.handleNewPuzzleClick = this.handleNewPuzzleClick.bind(this);\n\t\tthis.handleCheckClick = this.handleCheckClick.bind(this);\n\t\tthis.handleRevealClick = this.handleRevealClick.bind(this);\n\t\tthis.handleClearClick = this.handleClearClick.bind(this);\n\t\tthis.handleTimerPause = this.handleTimerPause.bind(this);\n\t\tthis.handleTimerUpdate = this.handleTimerUpdate.bind(this);\n\t\tthis.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n\t\tthis.handleNotesClick = this.handleNotesClick.bind(this);\n\t\tthis.handleModalButtonClick = this.handleModalButtonClick.bind(this);\n\t\tthis.saveState = this.saveState.bind(this);\n\n\t\tthis.timerState = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tvar self = this;\n\t\tthis.props.changeActivePage(\"solve\");\n\t\tsetTimeout(function() {\n\t\t\tconst storedState = JSON.parse(localStorage.getItem('solveState'));\n\t\t\tif (storedState && storedState.finishedGrid && storedState.finishedGrid.length) {\n\t\t\t\t// dont keep track of ignored days/notes mode\n\t\t\t\tdelete storedState.ignoredDays;\n\t\t\t\tdelete storedState.notesMode;\n\t\t\t\tstoredState.progressSaved = true;\n\t\t\t\tstoredState.paused = true;\n\t\t\t\n\t\t\t\tself.setState(storedState);\n\t\t\t} else {\n\t\t\t\tself.setupPuzzle()\n\t\t\t}\n\t\t}, 100);\n\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyDown);\n\t\tsmoothscroll.polyfill();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyDown);\n\t}\n\n\tsetupPuzzle() {\n\t\tvar self = this;\n\t\tfetchRandomData(this.state.ignoredDays)\n\t\t\t.then(response => {\n\t\t\t\t// only allow 15x15 or 21x21 puzzles\n\t\t\t\tif (response && response.data && response.data.size \n\t\t\t\t\t&& ((response.data.size.cols === 15 && response.data.size.rows === 15)\n\t\t\t\t\t|| (response.data.size.cols === 21 && response.data.size.rows === 21))\n\t\t\t\t\t&& !gridUtils.isRebus(response.data.grid)) {\n\n\t\t\t\t\tconst finishedGrid = gridUtils.makeFinishedGrid(response.data.grid);\n\t\t\t\t\tconst grid = finishedGrid.slice().map(char => char ? null : char);\n\t\t\t\t\tconst clues = clueUtils.makeClues(response.data.clues, response.data.gridnums);\n\n\t\t\t\t\tself.setState({\n\t\t\t\t\t\tfinishedGrid: finishedGrid,\n\t\t\t\t\t\tclues: clues,\n\t\t\t\t\t\tgrid: grid,\n\t\t\t\t\t\trowLength: response.data.size.cols,\n\t\t\t\t\t\tisAcross: true,\n\t\t\t\t\t\tlabels: gridUtils.makeLabels(clues),\n\t\t\t\t\t\tpuzzleDate: response.data.date,\n\t\t\t\t\t\tpuzzleAuthor: response.data.author,\n\t\t\t\t\t\tactiveClue: clueUtils.findFirstActiveClues(true, clues),\n\t\t\t\t\t\taltDirectionActiveClue: clueUtils.findFirstActiveClues(false, clues),\n\t\t\t\t\t\tactiveCell: gridUtils.findFirstActiveCells(grid, true, response.data.size.cols)[0],\n\t\t\t\t\t\tactiveClueCells: gridUtils.findFirstActiveCells(grid, true, response.data.size.cols)[1],\n\t\t\t\t\t\tcorrectCells: [],\n\t\t\t\t\t\tincorrectCells: [],\n\t\t\t\t\t\trevealedCells: [],\n\t\t\t\t\t\tnoteCells: [],\n\t\t\t\t\t\tgreyedClues: [],\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\tpaused: false,\n\t\t\t\t\t\ttimerValue: 0,\n\t\t\t\t\t\tshouldCheckFinishedGrid: true,\n\t\t\t\t\t\tcorrect: false,\n\t\t\t\t\t\tfinished: false,\n\t\t\t\t\t\tprogressSaved: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tself.setupPuzzle();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tself.setupPuzzle();\n\t\t\t});\n\t}\n\n\t// save state to local storage\n\tsaveState() {\n\t\tconst newTimerValue = this.timerState.current;\n\t\tthis.setState({timerValue: newTimerValue}, () => {\n\t\t\tlocalStorage.setItem('solveState', JSON.stringify(this.state));\n\t\t\tthis.setState({progressSaved: true});\n\t\t});\n\t}\n\n\thandleKeyDown(e) {\n\t\tif (this.state.loading || this.state.paused || !this.state.hasStarted) {\n\t\t\treturn;\n\t\t}\n\n\t\t// ignore meta keys\n\t\tif([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n\t\t\te.preventDefault();\n\t    }\n\n\t\t// valid characters\n\t\tif (e.keyCode >= 65 && e.keyCode <= 90) {\n\t\t\tthis.enterValidCharacter(e.key);\n\t\t}\n\n\t\tif (e.keyCode === 37 || e.keyCode === 38 || e.keyCode === 39 || e.keyCode === 40) {\n\t\t\t// get possible new active clue/cells\n\t\t\tconst activeClueCellsAcross = gridUtils.findActiveClueCells(this.state.activeCell, true, this.state.grid, this.state.rowLength);\n\t\t\tconst activeClueCellsDown = gridUtils.findActiveClueCells(this.state.activeCell, false, this.state.grid, this.state.rowLength);\n\t\t\tconst activeClueAcross = clueUtils.getActiveClueFromCell(activeClueCellsAcross[0], this.state.clues, true);\n\t\t\tconst activeClueDown = clueUtils.getActiveClueFromCell(activeClueCellsDown[0], this.state.clues, false);\n\n\t\t\t// left arrow\n\t\t\tif (e.keyCode === 37) {\n\t\t\t\tif (!this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsAcross,\n\t\t\t\t\t\tactiveClue: activeClueAcross,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueDown,\n\t\t\t\t\t\tisAcross: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToPrevCell(true, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// up arrow\n\t\t\tif (e.keyCode === 38) {\n\t\t\t\tif (this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsDown,\n\t\t\t\t\t\tactiveClue: activeClueDown,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueAcross,\n\t\t\t\t\t\tisAcross: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToPrevCell(false, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// right arrow\n\t\t\tif (e.keyCode === 39) {\n\t\t\t\tif (!this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsAcross,\n\t\t\t\t\t\tactiveClue: activeClueAcross,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueDown,\n\t\t\t\t\t\tisAcross: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToNextCell(true, true, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// down arrow\n\t\t\tif (e.keyCode === 40) {\n\t\t\t\tif (this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsDown,\n\t\t\t\t\t\tactiveClue: activeClueDown,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueAcross,\n\t\t\t\t\t\tisAcross: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToNextCell(false, true, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// backspace\n\t\tif (e.keyCode === 8) {\n\t\t\t// delete if active cell isn't already marked correct\n\t\t\tthis.moveToPrevCell(this.state.isAcross, !utils.isCellInGroup(this.state.correctCells, this.state.activeCell));\n\t\t\tthis.setState({progressSaved: false});\n\t\t}\n\t}\n\n\tenterValidCharacter(key) {\n\t\tconst wasEmpty = this.state.grid[this.state.activeCell] === null;\n\n\t\t// only assign new value if active cell isnt marked correct\n\t\tif (!utils.isCellInGroup(this.state.correctCells, this.state.activeCell)) {\n\t\t\tlet newGrid = this.state.grid.slice();\n\n\t\t\tnewGrid[this.state.activeCell] = key.toUpperCase();\n\n\t\t\t// if cell is marked as incorrect and new value is entered, remove incorrect mark\n\t\t\tif (newGrid[this.state.activeCell] !== this.state.grid[this.state.activeCell]) {\n\t\t\t\tthis.removeIncorrectCell(this.state.activeCell);\n\t\t\t}\n\n\t\t\t// if we're in notes mode, add active cell to noted cells\n\t\t\t// if we're not and active cell is noted, remove from noted cells\n\t\t\tlet newNoteCells = this.state.noteCells.slice();\n\t\t\tconst shouldAddNote = this.state.notesMode && !utils.isCellInGroup(this.state.noteCells, this.state.activeCell);\n\t\t\tconst shouldDeleteNote = !this.state.notesMode && utils.isCellInGroup(this.state.noteCells, this.state.activeCell);\n\n\t\t\tif (shouldAddNote) {\n\t\t\t\tnewNoteCells = [...newNoteCells, this.state.activeCell];\n\t\t\t} else if (shouldDeleteNote) {\n\t\t\t\tnewNoteCells = newNoteCells.filter(cell => cell !== this.state.activeCell);\n\t\t\t}\n\n\t\t\tconst newGreyedClues = clueUtils.getGreyedClues(newGrid, this.state.clues, this.state.greyedClues, this.state.activeCell, true, this.state.isAcross, this.state.rowLength);\n\n\t\t\tthis.setState({\n\t\t\t\tgrid: newGrid,\n\t\t\t\tnoteCells: newNoteCells,\n\t\t\t\tgreyedClues: newGreyedClues,\n\t\t\t\tprogressSaved: false\n\t\t\t});\n\t\t\t\n\t\t\tif (gridUtils.isGridComplete(newGrid)) {\n\t\t\t\tthis.checkFinishedPuzzle(newGrid);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.moveToNextCell(this.state.isAcross, false, wasEmpty);\n\t}\n\n\thandleCellClick(e, cell) {\n\t\t// don't make blacked out cell active\n\t\tif (this.state.grid[cell] !== false) {\n\t\t\t// if cell is double clicked, switch across/down direction\n\t\t\tconst isAcross = (this.state.activeCell === cell)\n\t\t\t\t? !this.state.isAcross\n\t\t\t\t: this.state.isAcross;\n\n\t\t\tconst activeClueCells = gridUtils.findActiveClueCells(cell, isAcross, this.state.grid, this.state.rowLength);\n\t\t\tconst altDirActiveClueCells = gridUtils.findActiveClueCells(cell, !isAcross, this.state.grid, this.state.rowLength);\n\t\t\tconst activeClue = clueUtils.getActiveClueFromCell(activeClueCells[0], this.state.clues, isAcross);\n\t\t\tconst altDirectionActiveClue = clueUtils.getActiveClueFromCell(altDirActiveClueCells[0], this.state.clues, !isAcross);\n\n\t\t\tthis.setState({\n\t\t\t\tactiveCell: cell,\n\t\t\t\tactiveClueCells: activeClueCells,\n\t\t\t\tactiveClue: activeClue,\n\t\t\t\taltDirectionActiveClue: altDirectionActiveClue,\n\t\t\t\tisAcross: isAcross\n\t\t\t});\n\t\t}\n\t}\n\n\thandleClueClick(e, clueNum) {\n\t\tlet newActiveClue = {};\n\t\tnewActiveClue[clueNum] = this.state.clues[clueNum];\n\n\t\tconst {activeCell, activeClueCells, isAcross} = gridUtils.getActiveCellsFromClue(newActiveClue, this.state.grid, this.state.rowLength);\n\n\t\tconst altDirClueFirstCell = gridUtils.findActiveClueCells(activeCell, !isAcross, this.state.grid, this.state.rowLength)[0];\n\t\tconst altDirectionActiveClue = clueUtils.getActiveClueFromCell(altDirClueFirstCell, this.state.clues, !isAcross);\n\n\t\tthis.setState({\n\t\t\tactiveClue: newActiveClue,\n\t\t\taltDirectionActiveClue: altDirectionActiveClue,\n\t\t\tactiveCell: activeCell,\n\t\t\tactiveClueCells: activeClueCells,\n\t\t\tisAcross: isAcross\n\t\t});\n\t}\n\n\thandleNewPuzzleClick(e) {\n\t\tconst self = this;\n\t\tif (this.state.ignoredDays.length >= 7) {\n\t\t\talert(\"No days selected!\");\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({loading: true, hasStarted: false});\n\n\t\t// fake loading time\n\t\tsetTimeout(() => {\n\t\t\tself.setupPuzzle()\n\t\t}, 100); \n\t}\n\n\thandleCheckClick(type) {\n\t\t// get cells to check and add incorrect ones to current list of incorrect cells\n\t\tlet incorrectCells = this.state.incorrectCells.slice();\n\t\tlet correctCells = this.state.correctCells.slice();\n\t\tlet cellsToCheck;\n\n\t\tswitch(type) {\n\t\t\t// square\n\t\t\tcase 0:\n\t\t\t\tcellsToCheck = [this.state.activeCell];\n\t\t\t\tbreak;\n\t\t\t// clue\n\t\t\tcase 1: \n\t\t\t\tcellsToCheck = gridUtils.findActiveClueCells(this.state.activeCell, this.state.isAcross, this.state.grid, this.state.rowLength);\n\t\t\t\tbreak;\n\t\t\t// puzzle\n\t\t\tcase 2:\n\t\t\t\tcellsToCheck = gridUtils.findAllCells(this.state.grid);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tcellsToCheck = [];\n\t\t\t\tbreak\n\t\t}\n\n\t\tcellsToCheck.forEach(cell => {\n\t\t\tlet currentGridValue = this.state.grid[cell];\n\t\t\tlet finishedGridValue = this.state.finishedGrid[cell];\n\n\t\t\tif (currentGridValue !== null && !utils.isCellInGroup(this.state.correctCells, cell)) {\n\t\t\t\tif (currentGridValue === finishedGridValue) {\n\t\t\t\t\tcorrectCells.push(cell);\n\t\t\t\t} else {\n\t\t\t\t\tincorrectCells.push(cell);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tincorrectCells: incorrectCells,\n\t\t\t\tcorrectCells: correctCells,\n\t\t\t\tprogressSaved: false\n\t\t\t});\n\t\t});\n\t}\n\n\thandleRevealClick(type) {\n\t\tlet revealedCells = this.state.revealedCells.slice();\n\t\tlet correctCells = this.state.correctCells.slice();\n\t\tlet incorrectCells = this.state.incorrectCells.slice();\n\t\tlet cellsToReveal;\n\n\t\tswitch(type) {\n\t\t\t// square\n\t\t\tcase 0:\n\t\t\t\tcellsToReveal = [this.state.activeCell];\n\t\t\t\tbreak;\n\t\t\t// clue\n\t\t\tcase 1: \n\t\t\t\tcellsToReveal = gridUtils.findActiveClueCells(this.state.activeCell, this.state.isAcross, this.state.grid, this.state.rowLength);\n\t\t\t\tbreak;\n\t\t\t// puzzle\n\t\t\tcase 2:\n\t\t\t\tcellsToReveal = gridUtils.findAllCells(this.state.grid);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tcellsToReveal = [];\n\t\t\t\tbreak\n\t\t}\n\n\t\tlet newGrid = this.state.grid.slice();\n\t\tcellsToReveal.forEach(cell => {\n\t\t\tif (!utils.isCellInGroup(this.state.revealedCells, cell)) {\n\t\t\t\t// if current value is incorrect, make it correct and mark as revealed (giving it red marker)\n\t\t\t\tif (this.state.grid[cell] !== this.state.finishedGrid[cell]) {\n\t\t\t\t\tnewGrid[cell] = this.state.finishedGrid[cell];\n\t\t\t\t\trevealedCells.push(cell);\n\t\t\t\t\t// remove cell from incorrect list if present\n\t\t\t\t\tif (utils.isCellInGroup(incorrectCells, cell)) {\n\t\t\t\t\t\tutils.removeArrayItem(incorrectCells, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// every revealed cell is also marked as correct\n\t\t\t\tif (!utils.isCellInGroup(this.state.correctCells, cell)) {\n\t\t\t\t\tcorrectCells.push(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst newGreyedClues = clueUtils.getGreyedClues(newGrid, this.state.clues, this.state.greyedClues, this.state.activeCell, true, this.state.isAcross, this.state.rowLength);\n\n\t\tthis.setState({\n\t\t\trevealedCells: revealedCells,\n\t\t\tcorrectCells: correctCells,\n\t\t\tgreyedClues: newGreyedClues,\n\t\t\tincorrectCells: incorrectCells,\n\t\t\tgrid: newGrid,\n\t\t\tprogressSaved: false\n\t\t});\n\n\t\tif (gridUtils.isGridComplete(newGrid)) {\n\t\t\tthis.checkFinishedPuzzle(newGrid);\n\t\t}\n\t}\n\n\thandleClearClick() {\n\t\tconst newGrid = this.state.finishedGrid.slice().map(char => char ? null : char);\n\t\tthis.setState({\n\t\t\tgrid: newGrid,\n\t\t\trevealedCells: [],\n\t\t\tcorrectCells: [],\n\t\t\tincorrectCells: [],\n\t\t\tgreyedClues: [],\n\t\t\tshouldCheckFinishedGrid: true\n\t\t});\n\t}\n\n\thandleNotesClick() {\n\t\tthis.setState({notesMode: !this.state.notesMode});\n\t}\n\n\thandleTimerPause() {\n\t\tthis.setState({paused: true});\n\t}\n\n\thandleTimerUpdate(timerValue) {\n\t\tif (timerValue && this.state.hasStarted) {\n\t\t\tthis.setState({timerValue: timerValue});\n\t\t}\n\t}\n\n\t// for days difficulty dropdown\n\thandleCheckboxChange(e) {\n\t\tconst idx = this.state.ignoredDays.indexOf(e.target.id);\n\t\tif (idx > -1) {\n\t\t\tlet ignoredDaysCopy = [...this.state.ignoredDays];\n\t\t\tignoredDaysCopy.splice(idx, 1);\n\t\t\tthis.setState({ignoredDays: ignoredDaysCopy});\n\t\t} else {\n\t\t\tthis.setState({ignoredDays: [...this.state.ignoredDays, e.target.id]});\n\t\t}\n\t}\n\n\thandleModalButtonClick(e) {\n\t\tthis.setState({\n\t\t\tpaused: false,\n\t\t\thasStarted: true\n\t\t});\n\t}\n\n\tmoveToNextCell(isAcross, ignoreUnfinishedClues, wasEmptyCell) {\n\t\tconst nextCellState = utils.getNextCellState(\n\t\t\tthis.state.grid,\n\t\t\tthis.state.clues,\n\t\t\tthis.state.activeCell,\n\t\t\tthis.state.rowLength,\n\t\t\tisAcross, \n\t\t\tignoreUnfinishedClues, \n\t\t\twasEmptyCell\n\t\t);\n\t\tthis.setState(nextCellState);\n\t}\n\n\tmoveToPrevCell(isAcross, shouldDelete) {\n\t\tconst prevCellState = utils.getPrevCellState(\n\t\t\tthis.state.grid,\n\t\t\tthis.state.clues,\n\t\t\tthis.state.activeCell,\n\t\t\tthis.state.rowLength,\n\t\t\tthis.state.activeClueCells,\n\t\t\tthis.state.correctCells,\n\t\t\tthis.state.incorrectCells,\n\t\t\tthis.state.greyedClues,\n\t\t\tisAcross, \n\t\t\tshouldDelete\n\t\t);\n\t\tthis.setState(prevCellState);\n\t}\n\n\t// delete previous cell as well if its not null\n\tremoveIncorrectCell(cellToRemove, prevCell) {\n\t\tconst filteredIncorrectCells = this.state.incorrectCells.filter(cell => {\n\t\t\treturn cellToRemove !== cell && (!prevCell || prevCell !== cell);\n\t\t});\n\n\t\tthis.setState({incorrectCells: filteredIncorrectCells});\n\t}\n\n\tcheckFinishedPuzzle(newGrid) {\n\t\t// stop verifying if they've already finished successfully\n\t\tif (this.state.shouldCheckFinishedGrid) {\n\t\t\tconst puzzleCorrect = JSON.stringify(newGrid) === JSON.stringify(this.state.finishedGrid);\n\t\t\tthis.setState({\n\t\t\t\tshouldCheckFinishedGrid: !puzzleCorrect,\n\t\t\t\tpaused: true,\n\t\t\t\tfinished: true,\n\t\t\t\tcorrect: puzzleCorrect\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst body = this.state.loading ? \n\t\t\n\t\t\t<LoaderContainer>\n\t\t\t\t<ClipLoader \n\t\t\t\t\tsize={100}\n\t\t\t\t\tcolor={\"#a7d8ff\"}\n\t\t\t\t\tloading={true} />\n\t\t\t</LoaderContainer> :\n\n\t\t\t(<BodyContainer>\n\t\t    \t<GridHalf>\n\t\t\t\t\t<GridHalfRail>\n\t\t\t\t\t\t<PuzzleHeader date={this.state.puzzleDate} author={this.state.puzzleAuthor} />\n\n\t\t\t\t\t\t<ClueBanner \n\t\t\t\t\t\t\tmode=\"solve\"\n\t\t\t\t\t\t\tlabel={Object.keys(this.state.activeClue)[0]}\n\t\t\t\t\t\t\tclue={this.state.activeClue[Object.keys(this.state.activeClue)[0]]} />\n\n\t\t\t\t\t    <Grid \n\t\t\t\t\t        grid={this.state.grid}\n\t\t\t\t     \t    rowLength={this.state.rowLength} \n\t\t\t\t     \t    activeCell={this.state.activeCell}\n\t\t\t\t     \t    activeClueCells={this.state.activeClueCells}\n\t\t\t\t     \t    correctCells={this.state.correctCells}\n\t\t\t\t     \t    incorrectCells={this.state.incorrectCells}\n\t\t\t\t     \t    revealedCells={this.state.revealedCells}\n\t\t\t\t     \t    noteCells={this.state.noteCells}\n\t\t\t\t     \t    handleCellClick={this.handleCellClick}\n\t\t\t\t     \t    labels={this.state.labels} />\n\t\t     \t    </GridHalfRail>\n\t     \t\t</GridHalf>\n\t     \t\t<CluesHalf>\n\t\t\t\t\t<Clues \n\t\t\t\t\t\tmode=\"solve\"\n\t\t\t\t\t\tclues={this.state.clues}\n\t\t\t\t\t\tgrid={this.state.grid}\n\t\t\t\t\t\tactiveClue={this.state.activeClue}\n\t\t\t\t\t\taltDirectionActiveClue={this.state.altDirectionActiveClue}\n\t\t\t\t\t\tgreyedClues={this.state.greyedClues}\n\t\t\t\t\t\thandleClueClick={this.handleClueClick} />\n\t     \t\t</CluesHalf>\n     \t\t</BodyContainer>);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<StyledSolve blurred={(this.state.paused || !this.state.hasStarted) && !this.state.loading}>\n\t\t\t\t\t<NavContainer>\n\t\t\t\t\t\t<NavWrapper \n\t\t\t\t\t\t\tmode=\"solve\"\n\t\t\t\t\t\t\ttoggleSidebarOpen={this.props.toggleSidebarOpen}\n\t\t\t\t\t\t\thandleTimerPause={this.handleTimerPause}\n\t\t\t\t\t\t\thandleTimerUpdate={this.handleTimerUpdate}\n\t\t\t\t\t\t\thandleNewPuzzleClick={this.handleNewPuzzleClick} \n\t\t\t\t\t\t\thandleCheckClick={this.handleCheckClick}\n\t\t\t\t\t\t\thandleRevealClick={this.handleRevealClick}\n\t\t\t\t\t\t\thandleClearClick={this.handleClearClick}\n\t\t\t\t\t\t\thandleNotesClick={this.handleNotesClick}\n\t\t\t\t\t\t\thandleSaveClick={this.saveState}\n\t\t\t\t\t\t\tnotesMode={this.notesMode}\n\t\t\t\t\t\t\tonCheckboxChange={this.handleCheckboxChange}\n\t\t\t\t\t\t\tprogressSaved={this.state.progressSaved}\n\t\t\t\t\t\t\ttimerValue={this.state.timerValue}\n\t\t\t\t\t\t\ttimerRef={this.timerState}\n\t\t\t\t\t\t\thasStarted={this.state.hasStarted}\n\t\t\t\t\t\t\tfinished={this.state.finished}\n\t\t\t\t\t\t\tpaused={this.state.paused}\n\t\t\t\t\t\t\tcorrect={this.state.correct} />\n\t\t\t\t\t</NavContainer>\n\t\t\t\t\t{body}\n\t\t\t    </StyledSolve> \n\n\t\t\t    <SolveModal \n\t\t\t\t\thandleModalButtonClick={this.handleModalButtonClick}\n\t\t\t\t\thasStarted={this.state.hasStarted}\n\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\tpaused={this.state.paused}\n\t\t\t\t\ttimerValue={this.state.timerValue}\n\t\t\t\t\tfinished={this.state.finished}\n\t\t\t\t\tcorrect={this.state.correct} />\n\t\t   </Fragment>\n\t\t);\n\t}\n}\n\nconst StyledSolve = styled.div`\n\tmax-width: 100vw;\n\tmax-height: 100vh;\n\theight: 100vh;\n\twidth: 100vw;\n\ttransition: filter 300ms ease-in-out;\n\tfilter: ${props => props.blurred ? \"blur(3px)\" : \"blur(0)\"};\n`;\n\nconst LoaderContainer = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-top: -50px;\n\tmargin-left: -50px;\n`;\n\nconst NavContainer = styled.div`\n\theight: 45px;\n    width: 100%;\n`;\n\nconst BodyContainer = styled.div`\n\tmax-width: 100%;\n\tmax-height: 100%;\n\theight: calc(100% - 53px);\n\tdisplay: flex;\n`;\n\nconst GridHalf = styled.div`\n\twidth: 50%;\n\t@media (max-width: 1000px) {\n\t\twidth: 45%;\n\t}\n\t@media (max-width: 920px) {\n\t\twidth: 410px;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 40%;\n      \tmin-width: 360px;\n\t}\t\n`;\n\nconst GridHalfRail = styled.div`\n\theight: 100%;\n\twidth: 480px;\n\tmargin: 0 auto;\n\t@media (max-width: 1000px) {\n\t\twidth: 400px;\n      \tpadding-top: 10px;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 350px;\n\t}\t\n`;\n\nconst CluesHalf = styled.div`\n\twidth: 50%;\n\t@media (max-width: 1000px) {\n\t\twidth: 55%;\n\t}\n\t@media (max-width: 920px) {\n\t\tmax-width: 450px;\n\t\tmargin-left: 20px;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 60%;\n      \tmargin-left: 10px;\n\t}\t\n`;\n\nexport default Solve;\n","import React from 'react';\nimport styled from 'styled-components';\nimport trashIcon from '../../../icon/trash.svg';\n\nconst LoadModalContent = ({puzzleName, savedPuzzles, handleLoadClick, handleDeleteClick}) => {\n    return (\n        <StyledLoadModalContent>\n            <Header> Your puzzles </Header>\n            <PuzzleList>\n                {Object.keys(savedPuzzles).reverse().map((name, idx) => {\n                    return (\n                        name !== puzzleName &&\n                            <PuzzleListItem key={idx} onClick={() => handleLoadClick(name)}>\n                                <PuzzleInfo>\n                                    <PuzzleName> {name} </PuzzleName>\n                                    <DateCreated> {\"Created \" + savedPuzzles[name].dateCreated || \"\"} </DateCreated>\n                                </PuzzleInfo>\n                                <Button onClick={(e) => {\n                                    handleDeleteClick(name);\n                                    e.stopPropagation();\n                                }}>\n                                    <Icon src={trashIcon} />\n                                </Button>\n                            </PuzzleListItem>\n                    )\n                })}\n            </PuzzleList>\n        </StyledLoadModalContent>\n    );\n}\n\nconst StyledLoadModalContent = styled.div`\n    padding: 10px 20px;\n    margin-bottom: 10px;\n`;\n\nconst Header = styled.p`\n    font-weight: bold;\n    font-size: 20px;\n    margin-bottom: 20px;\n`;\n\nconst PuzzleList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    list-style-type: none;\n    max-height: 380px;\n    overflow-y: scroll;\n`;\n\nconst PuzzleListItem = styled.li`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n    padding: 10px;\n    border-bottom: 1px solid #CCC;\n    &:hover {\n        background-color: #EEE;\n        cursor: pointer;\n    }\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n\nconst PuzzleInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    max-width: 300px;\n`;\n\nconst PuzzleName = styled.span`\n    margin-right: auto;\n    font-weight: bold;\n`;\n\nconst DateCreated = styled.span`\n    font-size: 12px;\n    opacity: 0.8\n`;\n\nconst Button = styled.button`\n    margin-left: 80px;\n    border: none;\n    background-color: transparent;\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst Icon = styled.img`\n    height: 18px;\n    width: 18px;\n    opacity: 0.5;\n    &:hover {\n        opacity: 0.9;\n    }\n`;\n\nexport default LoadModalContent;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst SaveModalContent = ({puzzleName, handleSaveClick}) => {\n    const [name, setName] = useState(\"\");\n    const [invalidName, setInvalidName] = useState(false);\n\n    const validateName = (e) => {\n        e.preventDefault();\n        if (name === \"\") {\n            setInvalidName(true);\n        } else {\n            handleSaveClick(name, false);\n        }\n    }\n\n    useEffect(() => {\n        setName(puzzleName || \"\");\n    }, [puzzleName]);\n\n    return (\n        <StyledSaveModalContent>\n            <Header> Give your puzzle a name! </Header>\n            <FormWrapper onSubmit={validateName}>\n                <InputWrapper>\n                    <Input \n                        type=\"text\"\n                        placeholder='\"My crossword puzzle\"'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)} />\n\n                    {invalidName && <Warning> Your puzzle needs a name </Warning>}\n                </InputWrapper>\n                <SaveButton type=\"submit\"> Save </SaveButton>\n            </FormWrapper>\n        </StyledSaveModalContent>\n    );\n}\n\nconst StyledSaveModalContent = styled.div`\n    padding: 10px 20px;\n    margin-bottom: 10px;\n`;\n\nconst FormWrapper = styled.form`\n    display: flex;\n    align-items: flex-start;\n`;\n\nconst Header = styled.p`\n    font-weight: bold;\n    font-size: 20px;\n    margin-bottom: 20px;\n`;\n\nconst InputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Input = styled.input`\n    padding: 7px;\n    border-radius: 3px;\n    outline: none;\n    border: 1px solid grey;\n    font-size: 15px;\n    margin-right: 10px;\n    min-width: 200px;\n    line-height: 17px;\n`;\n\nconst Warning = styled.span`\n    color: #da3849;\n    font-size: 13px;\n`;\n\nconst SaveButton = styled.button`\n    border: none;\n    border-radius: 14px;\n    background-color: #a7d8ff;\n    font-weight: bold;\n    font-size: 13px;\n    padding: 5px 10px;\n    height: 30px;\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.5);\n    &:hover {\n        cursor: pointer;\n    }\n    &:active {\n        box-shadow: 0 1px 1px 0 rgba(0,0,0,0.5);\n    }\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport default SaveModalContent;","import {StyleSheet} from '@react-pdf/renderer';\n\nconst makePDFStyles = (rowLength) => {\n    return StyleSheet.create({\n        page: {\n            backgroundColor: '#FFF',\n            padding: '20pt 20pt 0 20pt',\n            height: '100%'\n        },\n        puzzleName: {\n            fontSize: '20pt',\n            fontFamily: 'Helvetica-Bold'\n        },\n        headerLine: {\n            width: '100%',\n            height: '1pt',\n            backgroundColor: '#000',\n            marginBottom: '15pt'\n        },\n        grid: {\n            height: '350pt',\n            width: '350pt',\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            marginBottom: '10pt'\n        },\n        cell: {\n            height: `${345 / rowLength}pt`,\n            width:  `${345 / rowLength}pt`,\n            borderTop: '1pt solid #000',\n            borderLeft: '1pt solid #000'\n        },\n        cellBorderRight: {\n            borderRight: '1pt solid #000'\n        },\n        cellBorderBottom: {\n            borderBottom: '1pt solid #000'\n        },\n        cellDisabled: {\n            backgroundColor: '#333'\n        },\n        label: {\n            position: 'absolute',\n            fontSize: `${rowLength * -0.3 + 12.5}pt`,\n            left: '1pt'\n        },\n        clues: {\n            display: 'flex',\n            flexDirection: 'column',\n            flexWrap: 'wrap',\n            height: '400pt'\n        },\n        clueType: {\n            width: '100pt',\n            fontSize: '12pt',\n            margin: '5pt 0',\n            fontFamily: 'Helvetica-Bold'\n        },\n        clue: {\n            width: '100pt',\n            margin: '2pt 5pt',\n            display: 'flex',\n            flexDirection: 'row'\n        },\n        clueLabel: {\n            fontSize: '10pt',\n            textAlign: 'right',\n            width: '10pt',\n            marginRight: '6pt',\n            fontFamily: 'Helvetica-Bold'\n        },\n        clueText: {\n            fontSize: '10pt',\n            marginRight: '10pt'\n        }\n    });\n}\n\nexport default makePDFStyles;","import React from 'react';\nimport { Page, Text, View, Document} from '@react-pdf/renderer';\nimport makePDFStyles from './PDFStyles';\n\nconst PDFDocument = ({grid, rowLength, labels, clues, name}) => {\n    const [acrossClues, downClues] = separateClues(clues);\n    const styles = makePDFStyles(rowLength);\n    const getLabel = (idx) => {\n        const label = labels.find(l => l[0] === idx);\n        return label ? label[1] : \"\";\n    };\n\n    const getCellStyle = (cell, idx) => {\n        let borderStyle = {};\n        if (idx === (rowLength * rowLength) - 1) {\n            // last cell\n            borderStyle = {...styles.cellBorderBottom, ...styles.cellBorderRight};\n        } else if (idx >= rowLength * (rowLength - 1)) {\n            // bottom row\n            borderStyle = styles.cellBorderBottom;\n        } else if ((idx + 1) % rowLength === 0) {\n            // right-most column\n            borderStyle = styles.cellBorderRight;\n        }\n    \n        let backgroundStyle = {};\n        if (cell === false) {\n            backgroundStyle = styles.cellDisabled\n        }\n    \n        return {...styles.cell, ...borderStyle, ...backgroundStyle};\n    };\n\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page} wrap={false}>\n                {name !== \"\" && <Text style={styles.puzzleName}>{name}</Text>}\n                <View style={styles.headerLine}></View>\n                <View style={styles.grid}>\n                    {grid.map((cell, idx) => {\n                        return (\n                            <View style={getCellStyle(cell, idx)} key={idx}>\n                                {(getLabel(idx) !== undefined) && <Text style={styles.label}> {getLabel(idx)} </Text>}\n                            </View>\n                        );\n                    })}\n                </View>\n                <View style={styles.clues}>\n                    <Text style={styles.clueType}>Across</Text>\n                    {Object.keys(acrossClues).map((clue, idx) => {\n                        return (\n                            <View style={styles.clue} key={idx}>\n                                <Text style={styles.clueLabel}>{clue.replace(/\\D+/g, '')}</Text>\n                                <Text style={styles.clueText}>{clues[clue].clue}</Text>\n                            </View>\n                        );\n                    })}\n\n                    <Text style={styles.clueType}>Down</Text>\n                    {Object.keys(downClues).map((clue, idx) => {\n                        return (\n                            <View style={styles.clue} key={idx}>\n                                <Text style={styles.clueLabel}>{clue.replace(/\\D+/g, '')}</Text>\n                                <Text style={styles.clueText}>{clues[clue].clue}</Text>\n                            </View>\n                        );\n                    })}\n                </View>\n            </Page>\n        </Document>\n    );\n};\n\nconst separateClues = (clues) => {\n    let separatedClues = [];\n\t[\"a\", \"d\"].forEach(clueType => {\n\t\tseparatedClues.push(\n\t\t\tObject.keys(clues)\n\t\t\t\t.filter(clue => clue.toLowerCase().includes(clueType))\n\t\t\t\t.reduce((res,key) => {\n\t\t\t\t\tres[key] = clues[key]; \n\t\t\t\t\treturn res\n\t\t\t\t}, {})\n\t\t);\n    });\n    return separatedClues;\n}\n\nexport default PDFDocument;","import React, {useEffect, useRef} from 'react';\nimport PDFDocument from '../pdf/PDFDocument';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport styled from 'styled-components';\n\nconst PrintModalContent = ({\n    grid,\n    rowLength,\n    labels,\n    clues,\n    puzzleName,\n    handleModalClose\n}) => {\n    const downloadText = useRef(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            // to avoid re-rendering PDF bug, render a link to the pdf and synthesize a click on it\n            if (downloadText.current) {\n                downloadText.current.click();\n            }\n            setTimeout(handleModalClose, 200);\n        }, 400);\n    }, [handleModalClose]);\n\n    return (\n        <Wrapper>\n            <PDFDownloadLink\n                document={\n                    <PDFDocument \n                        grid={grid} \n                        rowLength={rowLength}\n                        labels={labels} \n                        clues={clues}\n                        name={puzzleName} />\n                }\n                fileName={`${puzzleName || \"crossword\"}.pdf`}>\n                {({ blob, url, loading, error }) =>\n                    loading \n                        ? <DownloadText>Loading...</DownloadText> \n                        : <DownloadText ref={downloadText}>Download PDF</DownloadText>\n                }\n            </PDFDownloadLink>\n            <ClipLoader \n                size={70}\n                color={\"#a7d8ff\"}\n                loading={true} />\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    padding: 30px;\n`;\n\nconst DownloadText = styled.p`\n    display: none;\n`;\n\nexport default PrintModalContent;","import React from 'react';\nimport styled from 'styled-components';\nimport eraserIcon from '../../../icon/eraser.svg'\nimport mirroredEraserIcon from '../../../icon/flip.svg';\nimport saveIcon from '../../../icon/save.svg';\nimport loadIcon from '../../../icon/load.svg';\nimport downloadIcon from '../../../icon/download.svg';\n\n\nconst HelpModalContent = () => {\n    return (\n        <Container>\n            <Header>Tips</Header>\n            <TipsList>\n                <TipsListItem>\n                    <ItemHeader>Puzzle size</ItemHeader>\n                    <ItemTextPar>Use the grid size selector to change the size of your puzzle.</ItemTextPar>\n                    <ItemTextPar>Most puzzles are 15x15, but that can vary. The New York Times Sunday puzzle is 21x21, while\n                    their mini puzzles are often 5x5.</ItemTextPar>\n                </TipsListItem>\n                <TipsListItem>\n                    <ItemHeader>Filling in the board</ItemHeader>\n                    <ItemTextPar>\n                        Navigate through the board by typing, clicking, or using the arrow keys. \n                    </ItemTextPar>\n                    <ItemTextPar>\n                        <Image src={eraserIcon} />\n                        Use the eraser tool to choose which squares are blacked out. \n                    </ItemTextPar>\n                    <ItemTextPar>\n                        <Image rotated src={mirroredEraserIcon} />\n                        Enable Mirrored Mode in the dropdown menu to enforce rotational symmetry - a feature of almost every crossword puzzle.\n                    </ItemTextPar>\n                </TipsListItem>\n                <TipsListItem>\n                    <ItemHeader>Saving your work</ItemHeader>\n                    <ItemTextPar>\n                        <Image src={saveIcon} />\n                        Give your puzzle a name so you can come back to it later.\n                    </ItemTextPar>\n                    <ItemTextPar>\n                        <Image src={loadIcon} />\n                        Load any of your past puzzles.\n                    </ItemTextPar>\n                    <ItemTextPar>\n                        <Image src={downloadIcon} />\n                        Download a PDF of your puzzle to share.\n                    </ItemTextPar>\n                </TipsListItem>\n                <Footer>\n                    For a more detailed list of rules and standards, click <FooterLink href=\"https://www.nytimes.com/puzzles/submissions/crossword\" target=\"_blank\">here</FooterLink>\n                </Footer>\n            </TipsList>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    padding: 0 30px;\n    max-width: 550px;\n`;\n\nconst Header = styled.p`\n    font-weight: bold;\n    font-size: 24px;\n    margin-bottom: 20px;\n`;\n\nconst TipsList = styled.ul`\n    list-style-type: disc;\n`;\n\nconst TipsListItem = styled.li`\n    margin: 15px 0 10px 0;\n`;\n\nconst ItemHeader = styled.p`\n    font-weight: bold;\n    font-size: 18px;\n    margin-bottom: 10px;\n`;\n\nconst ItemTextPar = styled.p`\n    font-size: 15px;\n    margin: 0 0 10px 0;\n    display: flex;\n    align-items: center;\n`;\n\nconst Image = styled.img`\n    height: 18px;\n    width: 18px;\n    margin-right: 15px;\n    ${props => props.rotated && \"transform: rotate(45deg);\"}\n`;\n\nconst Footer = styled.p`\n    margin: 30px 0 10px 0;\n    font-size: 13px;\n`;\n\nconst FooterLink = styled.a`\n    font-weight: bold;\n    color: #0b7b99;\n`;\n\nexport default HelpModalContent;","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport LoadModalContent from './modals/LoadModalContent';\nimport SaveModalContent from './modals/SaveModalContent';\nimport PrintModalContent from './modals/PrintModalContent';\nimport HelpModalContent from './modals/HelpModalContent';\nimport xIcon from '../../icon/x.svg';\n\nconst CreateModal = ({\n    grid,\n    rowLength,\n    labels,\n    clues,\n    openModalType,\n    handleModalClose, \n    handleSaveClick, \n    handleLoadClick, \n    handlePuzzleDeleteClick,\n    puzzleName, \n    savedPuzzles\n}) => {\n    useEffect(() => {\n        const handleClick = (e) => {\n            if (e.target.id === \"modal-overlay\") {\n                handleModalClose();\n            }\n        }\n        window.addEventListener(\"click\", handleClick);\n        return () => window.removeEventListener(\"click\", handleClick);\n    }, [handleModalClose]);\n\n    return (\n        <ModalOverlay hidden={openModalType === \"\"} id=\"modal-overlay\">\n            <ModalContent>\n                <ModalCloseButton onClick={handleModalClose}>\n                    <ModalCloseIcon src={xIcon} alt=\"Close\" />\n                </ModalCloseButton>\n                \n                {openModalType === \"save\" && \n                    <SaveModalContent \n                        puzzleName={puzzleName}\n                        handleSaveClick={handleSaveClick} />\n                }\n\n                {openModalType === \"load\" && \n                    <LoadModalContent \n                        puzzleName={puzzleName}\n                        savedPuzzles={savedPuzzles}\n                        handleLoadClick={handleLoadClick}\n                        handleDeleteClick={handlePuzzleDeleteClick} />\n                }\n\n                {openModalType === \"print\" &&\n                    <PrintModalContent\n                        grid={grid}\n                        rowLength={rowLength}\n                        labels={labels}\n                        clues={clues}\n                        puzzleName={puzzleName}\n                        handleModalClose={handleModalClose} />\n                }\n\n                {openModalType === \"help\" &&\n                    <HelpModalContent />}\n            </ModalContent>\n        </ModalOverlay>\n    );\n}\n\nconst ModalOverlay = styled.div`\n    align-items: center;\n    justify-content: center;\n\tposition: absolute;\n\theight: 100vh;\n\twidth: 100vw;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 0;\n\tleft: 0;\n\tbackground-color: rgba(255,255,255,0.5);\n\tdisplay: ${props => props.hidden ? \"none\" : \"flex\"};\n`;\n\nconst ModalContent = styled.div`\n\tposition: absolute;\n\tbackground-color: white;\n\tbox-shadow: 0px 2px 4px 0 rgba(0,0,0,0.5);\n\tborder-radius: 5px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 20px;\n`;\n\nconst ModalCloseButton = styled.button`\n    font-size: 15px;\n    font-weight: bold;\n    background-color: transparent;\n    border: none;\n    align-self: flex-end;\n    outline: none;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst ModalCloseIcon = styled.img`\n    height: 11px;\n    width: 11px;\n`;\n\nexport default CreateModal;","import React from 'react';\nimport styled from 'styled-components';\nimport pencilIcon from '../../icon/pencil-grey.svg';\n\nconst PuzzleHeader = ({puzzleName, gridSize, handleEditClick, handleGridSizeChange}) => {\n    const gridSizes = [5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21];\n    return (\n        <StyledPuzzleHeader>\n            <NameSection hidden={!puzzleName}>\n                <PuzzleName>{puzzleName}</PuzzleName>\n                <EditButton onClick={() => handleEditClick(null, true)}>\n                    <EditIcon src={pencilIcon} />\n                </EditButton>\n            </NameSection>\n            <SizeDropdown defaultValue={gridSize} onChange={handleGridSizeChange}>\n                {gridSizes.map(size => \n                    <SizeOption \n                        key={size}\n                        value={size}>\n                        {size}x{size}\n                    </SizeOption>\n                )}\n            </SizeDropdown>\n        </StyledPuzzleHeader>\n    );\n}\n\nconst StyledPuzzleHeader = styled.div`\n    display: flex;\n    padding: 10px 0 0 3px;\n`;\n\nconst NameSection = styled.div`\n    display: ${props => props.hidden ? \"none\" : \"flex\"};\n    flex-grow: 1;\n`;\n\nconst PuzzleName = styled.div`\n    font-weight: bold;\n    font-size: 20px;\n    margin-right: 15px;\n`;\n\nconst EditButton = styled.button`\n    margin: 2px 10px 0 0;\n    border: none;\n    background-color: transparent;\n    &:focus {\n        outline: none;\n    }\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst EditIcon = styled.img`\n    height: 14px;\n    width: 14px;\n`;\n\nconst SizeDropdown = styled.select`\n    font-size: 14px;\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst SizeOption = styled.option`\n    font-size: 14px;\n`;\n\nexport default PuzzleHeader;","import React, { Component, Fragment } from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport styled from 'styled-components';\nimport * as utils from '../../util/utilities';\nimport * as gridUtils from '../../util/gridutils';\nimport * as clueUtils from '../../util/clueutils';\n\nimport {NavWrapper} from '../common/NavWrapper';\nimport Grid from '../common/grid/Grid';\nimport Clues from '../common/clues/Clues';\nimport ClueBanner from '../common/clues/ClueBanner';\nimport CreateModal from './CreateModal';\nimport PuzzleHeader from './PuzzleHeader';\n\nclass Create extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgrid: [],\n\t\t\tclues: {},\n\t\t\trowLength: 15,\n\t\t\tactiveClue: null,\n\t\t\taltDirectionActiveClue: null,\n\t\t\tactiveCell: null,\n\t\t\tactiveClueCells: null,\n            isAcross: true,\n\t\t\tblankMode: false,\n\t\t\tblankModeType: \"regular\",\n\t\t\tlabels: [],\n\t\t\tloading: true,\n\t\t\tfinished: false,\n\t\t\topenModalType: \"\",\n\t\t\tpuzzleName: null,\n\t\t\tpuzzleSaved: false,\n\t\t\tdateCreated: \"\",\n\t\t\tsavedPuzzles: {}\n        }\n\t\t\n\t\tthis.setupNewPuzzle = this.setupNewPuzzle.bind(this);\n\t\tthis.handleCellClick = this.handleCellClick.bind(this);\n\t\tthis.handleCluesClearClick = this.handleCluesClearClick.bind(this);\n\t\tthis.handleClueClick = this.handleClueClick.bind(this);\n\t\tthis.handleClueInput = this.handleClueInput.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleBlankClick = this.handleBlankClick.bind(this);\n        this.handleBlankTypeClick = this.handleBlankTypeClick.bind(this);\n\t\tthis.handleSaveClick = this.handleSaveClick.bind(this);\n\t\tthis.handleLoadClick = this.handleLoadClick.bind(this);\n\t\tthis.handlePrintClick = this.handlePrintClick.bind(this);\n\t\tthis.handleHelpClick = this.handleHelpClick.bind(this);\n\t\tthis.handlePuzzleDeleteClick = this.handlePuzzleDeleteClick.bind(this);\n\t\tthis.handleGridSizeChange = this.handleGridSizeChange.bind(this);\n\t\tthis.savePuzzle = this.savePuzzle.bind(this);\n\t\tthis.handleModalClose = this.handleModalClose.bind(this);\n\t}\n\n\tcomponentDidMount() {\n        var self = this;\n        this.props.changeActivePage(\"create\");\n\t\tthis.timeout = setTimeout(function() {\n\t\t\tconst createState = JSON.parse(localStorage.getItem('createState'));\n\t\t\tif (createState) {\n\t\t\t\tdelete createState.blankMode;\n\t\t\t\tself.setState(createState);\n\t\t\t} else {\n\t\t\t\tself.setupNewPuzzle()\n\t\t\t}\n\t\t\tself.setState({\n\t\t\t\tsavedPuzzles: JSON.parse(localStorage.getItem('savedPuzzles')) || {}\n\t\t\t});\n\t\t}, 400);\n\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyDown);\n\t\tsmoothscroll.polyfill();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyDown);\n\t}\n\n\tsetupNewPuzzle() {\n\t\tthis.setState({loading: true}, () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst rowLength = this.state.rowLength;\n\t\t\t\tconst grid = new Array(rowLength * rowLength).fill(null);\n\t\t\t\tconst clues = clueUtils.buildCreateClues(grid, rowLength);\n\t\t\t\tconst labels = gridUtils.makeLabels(clues);\n\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tgrid: grid,\n\t\t\t\t\tclues: clues,\n\t\t\t\t\tisAcross: true,\n\t\t\t\t\tlabels: labels,\n\t\t\t\t\tactiveClue: clueUtils.findFirstActiveClues(true, clues),\n\t\t\t\t\taltDirectionActiveClue: clueUtils.findFirstActiveClues(false, clues),\n\t\t\t\t\tactiveCell: gridUtils.findFirstActiveCells(grid, true, rowLength)[0],\n\t\t\t\t\tactiveClueCells: gridUtils.findFirstActiveCells(grid, true, rowLength)[1],\n\t\t\t\t\tloading: false,\n\t\t\t\t\tfinished: false,\n\t\t\t\t\tpuzzleName: null,\n\t\t\t\t\tpuzzleSaved: false,\n\t\t\t\t\tdateCreated: utils.formatDate(new Date())\n\t\t\t\t});\n\t\t\t}, 100);\n\t\t});\n\t}\n\n\t// save state to local storage\n\tsavePuzzle(name, oldName) {\n\t\tthis.setState({\n\t\t\tpuzzleName: name,\n\t\t\tpuzzleSaved: true,\n\t\t\topenModalType: \"\"\n\t\t}, () => {\n\t\t\tlet stateCopy = Object.assign({}, this.state);\n\t\t\t// saved puzzles is tracked outside of individual puzzle's state\n\t\t\tdelete stateCopy[\"savedPuzzles\"];\n\t\t\tlocalStorage.setItem('createState', JSON.stringify(stateCopy));\n\n\t\t\tlet newSavedPuzzles = Object.assign({}, this.state.savedPuzzles);\n\t\t\t// if puzzle is already saved under a different name, delete that version\n\t\t\tif (oldName && this.state.savedPuzzles[oldName]) {\n\t\t\t\tdelete newSavedPuzzles[oldName];\n\t\t\t}\n\t\t\t// store puzzle state in object and set in local storage/state\n\t\t\tnewSavedPuzzles[name] = stateCopy;\n\t\t\tthis.refreshSavedPuzzles(newSavedPuzzles);\n\t\t});\n\t}\n\n\trefreshSavedPuzzles(puzzles) {\n\t\tlocalStorage.setItem('savedPuzzles', JSON.stringify(puzzles));\n\t\tthis.setState({savedPuzzles: puzzles});\n\t}\n\n\tloadPuzzle(name) {\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\topenModalType: \"\"\n\t\t}, () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst loadedPuzzle = this.state.savedPuzzles[name];\n\t\t\t\tif (loadedPuzzle) {\n\t\t\t\t\tlocalStorage.setItem('createState', JSON.stringify(loadedPuzzle));\n\t\t\t\t\tthis.setState(loadedPuzzle);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t});\n\t}\n\n\thandleKeyDown(e) {\n\t\t// ignore loading, modal open, clue input\n\t\tif (this.state.loading || this.state.openModalType !== \"\" || document.activeElement.tagName === \"TEXTAREA\") {\n\t\t\treturn;\n\t\t}\n\n\t\t// ignore meta keys \n\t\tif ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n\t\t\te.preventDefault();\n\t    }\n\n\t\t// valid characters\n\t\tif (e.keyCode >= 65 && e.keyCode <= 90) {\n\t\t\tthis.enterValidCharacter(e.key);\n\t\t}\n\n\t\tif (e.keyCode === 37 || e.keyCode === 38 || e.keyCode === 39 || e.keyCode === 40) {\n\t\t\t// get possible new active clue/cells\n\t\t\tconst activeClueCellsAcross = gridUtils.findActiveClueCells(this.state.activeCell, true, this.state.grid, this.state.rowLength);\n\t\t\tconst activeClueCellsDown = gridUtils.findActiveClueCells(this.state.activeCell, false, this.state.grid, this.state.rowLength);\n\t\t\tconst activeClueAcross = clueUtils.getActiveClueFromCell(activeClueCellsAcross[0], this.state.clues, true);\n\t\t\tconst activeClueDown = clueUtils.getActiveClueFromCell(activeClueCellsDown[0], this.state.clues, false);\n\n\t\t\t// left arrow\n\t\t\tif (e.keyCode === 37) {\n\t\t\t\tif (!this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsAcross,\n\t\t\t\t\t\tactiveClue: activeClueAcross,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueDown,\n\t\t\t\t\t\tisAcross: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToPrevCell(true, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// up arrow\n\t\t\tif (e.keyCode === 38) {\n\t\t\t\tif (this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsDown,\n\t\t\t\t\t\tactiveClue: activeClueDown,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueAcross,\n\t\t\t\t\t\tisAcross: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToPrevCell(false, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// right arrow\n\t\t\tif (e.keyCode === 39) {\n\t\t\t\tif (!this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsAcross,\n\t\t\t\t\t\tactiveClue: activeClueAcross,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueDown,\n\t\t\t\t\t\tisAcross: true\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToNextCell(true, true, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// down arrow\n\t\t\tif (e.keyCode === 40) {\n\t\t\t\tif (this.state.isAcross) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveClueCells: activeClueCellsDown,\n\t\t\t\t\t\tactiveClue: activeClueDown,\n\t\t\t\t\t\taltDirectionActiveClue: activeClueAcross,\n\t\t\t\t\t\tisAcross: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.moveToNextCell(false, true, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// backspace\n\t\tif (e.keyCode === 8) {\n\t\t\t// delete if active cell isn't already marked correct\n\t\t\tthis.moveToPrevCell(this.state.isAcross, true);\n\t\t}\n\t}\n\n\tenterValidCharacter(key) {\n\t\tconst wasEmpty = this.state.grid[this.state.activeCell] === null;\n\t\t// only assign new value if active cell isnt marked correct\n\n        let newGrid = this.state.grid.slice();\n        newGrid[this.state.activeCell] = key.toUpperCase();\n\n        this.setState({\n            grid: newGrid,\n\t\t\tpuzzleSaved: false\n        });\n        \n        if (gridUtils.isGridComplete(newGrid)) {\n            return;\n        }\n\n\t\tthis.moveToNextCell(this.state.isAcross, false, wasEmpty);\n\t}\n\n\thandleCellClick(e, cell) {\n        if (this.state.blankMode) {\n            this.handleBlankChange(cell);\n            if (this.state.activeCell === cell) {\n                this.moveToNextCell(this.state.isAcross, false, false);\n            }\n        } else if (this.state.grid[cell] !== false) {\n            // don't make blacked out cell active\n\t\t\t// if cell is double clicked, switch across/down direction\n\t\t\tconst isAcross = (this.state.activeCell === cell)\n\t\t\t\t? !this.state.isAcross\n\t\t\t\t: this.state.isAcross;\n\n\t\t\tconst activeClueCells = gridUtils.findActiveClueCells(cell, isAcross, this.state.grid, this.state.rowLength);\n\t\t\tconst altDirActiveClueCells = gridUtils.findActiveClueCells(cell, !isAcross, this.state.grid, this.state.rowLength);\n\t\t\tconst activeClue = clueUtils.getActiveClueFromCell(activeClueCells[0], this.state.clues, isAcross);\n\t\t\tconst altDirectionActiveClue = clueUtils.getActiveClueFromCell(altDirActiveClueCells[0], this.state.clues, !isAcross);\n\n\t\t\tthis.setState({\n\t\t\t\tactiveCell: cell,\n\t\t\t\tactiveClueCells: activeClueCells,\n\t\t\t\tactiveClue: activeClue,\n\t\t\t\taltDirectionActiveClue: altDirectionActiveClue,\n\t\t\t\tisAcross: isAcross\n\t\t\t});\n\t\t}\n    }\n    \n    handleBlankChange(cell) {\n\t\tlet newGrid = this.state.grid.slice();\n\t\tconst symmetricCell = this.state.blankModeType === \"mirrored\" ? this.state.grid.length - 1 - cell : null;\n\t\t\n        if (this.state.grid[cell] === false) {\n\t\t\tnewGrid[cell] = null;\n\t\t\tif (symmetricCell !== null) {\n\t\t\t\tnewGrid[symmetricCell] = null;\n\t\t\t}\n        } else {\n\t\t\tnewGrid[cell] = false;\n\t\t\tif (symmetricCell !== null) {\n\t\t\t\tnewGrid[symmetricCell] = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst newClues = clueUtils.buildCreateClues(newGrid, this.state.rowLength, this.state.clues);\n\t\tconst newActiveClueCells = gridUtils.findActiveClueCells(this.state.activeCell, this.state.isAcross, newGrid, this.state.rowLength);\n        const newLabels = gridUtils.makeLabels(newClues);\n\n        this.setState({\n            grid: newGrid,\n            clues: newClues,\n\t\t\tlabels: newLabels,\n\t\t\tactiveClueCells: newActiveClueCells,\n\t\t\tpuzzleSaved: false\n        })\n    }\n\n\thandleClueClick(e, clueNum) {\n\t\tlet newActiveClue = {};\n\t\tnewActiveClue[clueNum] = this.state.clues[clueNum];\n\n\t\tconst {activeCell, activeClueCells, isAcross} = gridUtils.getActiveCellsFromClue(newActiveClue, this.state.grid, this.state.rowLength);\n\n\t\tconst altDirClueFirstCell = gridUtils.findActiveClueCells(activeCell, !isAcross, this.state.grid, this.state.rowLength)[0];\n\t\tconst altDirectionActiveClue = clueUtils.getActiveClueFromCell(altDirClueFirstCell, this.state.clues, !isAcross);\n\n\t\tthis.setState({\n\t\t\tactiveClue: newActiveClue,\n\t\t\taltDirectionActiveClue: altDirectionActiveClue,\n\t\t\tactiveCell: activeCell,\n\t\t\tactiveClueCells: activeClueCells,\n\t\t\tisAcross: isAcross\n\t\t});\n\t}\n\n\thandleClueInput(e) {\n\t\tlet newClues = Object.assign({}, this.state.clues);\n\t\tconst clueNum = e.target.getAttribute(\"data-clue-num\");\n\t\tif (clueNum && newClues[clueNum]) {\n\t\t\tnewClues[clueNum].clue = e.target.value;\n\t\t}\n\t\tthis.setState({\n\t\t\tclues: newClues,\n\t\t\tpuzzleSaved: false\n\t\t});\n\t}\n\n\thandleCluesClearClick(label) {\n\t\tconst clueType = label[0].toLowerCase();\n\t\tlet newClues = Object.assign({}, this.state.clues);\n\t\tObject.keys(newClues).forEach((clue) => {\n\t\t\tif (clue.toLowerCase().indexOf(clueType) > 0) {\n\t\t\t\tnewClues[clue].clue = \"\";\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tclues: newClues, \n\t\t\tpuzzleSaved: false\n\t\t});\n    }\n    \n    handleBlankClick(e) {\n        this.setState({blankMode: !this.state.blankMode});\n\t}\n\t\n\thandleBlankTypeClick(type) {\n\t\tthis.setState({blankModeType: type});\n\t}\n\n\thandleSaveClick(name, shouldEdit) {\n\t\t// edit puzzle name\n\t\tif (shouldEdit) {\n\t\t\tthis.setState({openModalType: \"save\"});\n\t\t\treturn;\n\t\t}\n\n\t\tif (name != null) {\n\t\t\t// just made/changed name\n\t\t\tthis.savePuzzle(name, this.state.puzzleName);\n\t\t} else if (this.state.puzzleName != null) {\n\t\t\t// already have name\n\t\t\tthis.savePuzzle(this.state.puzzleName);\n\t\t} else {\n\t\t\t// dont have name yet\n\t\t\tthis.setState({openModalType: \"save\"});\n\t\t}\n\t}\n\n\thandleLoadClick(name, shouldClose = false) {\n\t\tif (shouldClose) {\n\t\t\tthis.setState({openModalType: \"\"});\n\t\t} else if (name != null) {\n\t\t\tthis.loadPuzzle(name);\n\t\t} else {\n\t\t\tthis.setState({openModalType: \"load\"});\n\t\t}\n\t}\n\n\thandlePuzzleDeleteClick(name) {\n\t\tlet newSavedPuzzles = Object.assign({}, this.state.savedPuzzles);\n\t\tdelete newSavedPuzzles[name];\n\t\tif (!Object.keys(newSavedPuzzles).some(key => key !== this.state.puzzleName)) {\n\t\t\tthis.setState({openModalType: \"\"}, () => {\n\t\t\t\tthis.refreshSavedPuzzles(newSavedPuzzles);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.refreshSavedPuzzles(newSavedPuzzles);\n\t\t}\n\t}\n\n\thandlePrintClick() {\n\t\tthis.setState({openModalType: \"print\"});\n\t}\n\n\thandleHelpClick() {\n\t\tthis.setState({openModalType: \"help\"});\n\t}\n\n\thandleModalClose() {\n\t\tthis.setState({openModalType: \"\"});\n\t}\n\n\thandleGridSizeChange(e) {\n\t\tconst newRowLength = Number(e.target.value);\n\t\tconst newGrid = gridUtils.resizeGrid(newRowLength, this.state.rowLength, this.state.grid);\n\t\tconst newClues = clueUtils.buildCreateClues(newGrid, newRowLength, this.state.clues);\n\t\tthis.setState({\n\t\t\trowLength: newRowLength,\n\t\t\tgrid: newGrid,\n\t\t\tclues: newClues,\n\t\t\tlabels: gridUtils.makeLabels(newClues),\n\t\t\tactiveCell: gridUtils.findFirstActiveCells(newGrid, this.state.isAcross, newRowLength)[0],\n\t\t\tactiveClueCells: gridUtils.findFirstActiveCells(newGrid, this.state.isAcross, newRowLength)[1],\n\t\t\tactiveClue: clueUtils.findFirstActiveClues(true, newClues),\n\t\t\taltDirectionActiveClue: clueUtils.findFirstActiveClues(false, newClues),\n\t\t\tpuzzleSaved: false\n\t\t});\n\t}\n\n\tmoveToNextCell(isAcross, ignoreUnfinishedClues, wasEmptyCell) {\n\t\tconst nextCellState = utils.getNextCellState(\n\t\t\tthis.state.grid,\n\t\t\tthis.state.clues,\n\t\t\tthis.state.activeCell,\n\t\t\tthis.state.rowLength,\n\t\t\tisAcross, \n\t\t\tignoreUnfinishedClues, \n\t\t\twasEmptyCell\n\t\t);\n\t\tthis.setState(nextCellState);\n\t}\n\n\tmoveToPrevCell(isAcross, shouldDelete) {\n\t\tconst prevCellState = utils.getPrevCellState(\n\t\t\tthis.state.grid,\n\t\t\tthis.state.clues,\n\t\t\tthis.state.activeCell,\n\t\t\tthis.state.rowLength,\n\t\t\tthis.state.activeClueCells,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tisAcross,\n\t\t\tshouldDelete,\n\t\t);\n\t\tthis.setState(prevCellState);\n\t}\n\n\trender() {\n\t\tconst body = this.state.loading ? \n\t\t\t<LoaderContainer>\n\t\t\t\t<ClipLoader \n\t\t\t\t\tsize={100}\n\t\t\t\t\tcolor={\"#a7d8ff\"}\n\t\t\t\t\tloading={true} />\n\t\t\t</LoaderContainer> :\n\n\t\t\t(<BodyContainer>\n\t\t    \t<GridHalf>\n\t\t\t\t\t<GridHalfRail>\n\t\t\t\t\t\t<PuzzleHeader \n\t\t\t\t\t\t\tpuzzleName={this.state.puzzleName} \n\t\t\t\t\t\t\tgridSize={this.state.rowLength}\n\t\t\t\t\t\t\thandleEditClick={this.handleSaveClick}\n\t\t\t\t\t\t\thandleGridSizeChange={this.handleGridSizeChange} />\n\t\t\t\t\t\t<ClueBanner \n\t\t\t\t\t\t\tmode=\"create\"\n\t\t\t\t\t\t\tlabel={Object.keys(this.state.activeClue)[0]}\n\t\t\t\t\t\t\tclue={this.state.activeClue[Object.keys(this.state.activeClue)[0]]} \n\t\t\t\t\t\t\thandleClueInput={this.handleClueInput}/>\n\n\t\t\t\t\t    <Grid\n\t\t\t\t\t        grid={this.state.grid}\n\t\t\t\t     \t    rowLength={this.state.rowLength} \n\t\t\t\t     \t    activeCell={this.state.activeCell}\n\t\t\t\t     \t    activeClueCells={this.state.activeClueCells}\n\t\t\t\t\t\t\thandleCellClick={this.handleCellClick}\n\t\t\t\t\t\t\tblankMode={this.state.blankMode}\n\t\t\t\t     \t    labels={this.state.labels} />\n\t\t     \t    </GridHalfRail>\n\t     \t\t</GridHalf>\n\t     \t\t<CluesHalf>\n                    <Clues \n                        mode=\"create\"\n\t\t\t\t\t\tclues={this.state.clues}\n\t\t\t\t\t\tgrid={this.state.grid}\n\t\t\t\t\t\tactiveClue={this.state.activeClue}\n\t\t\t\t\t\taltDirectionActiveClue={this.state.altDirectionActiveClue}\n\t\t\t\t\t\tgreyedClues={this.state.greyedClues}\n\t\t\t\t\t\thandleClearClick={this.handleCluesClearClick}\n\t\t\t\t\t\thandleClueClick={this.handleClueClick}\n\t\t\t\t\t\thandleClueInput={this.handleClueInput} />\n\t     \t\t</CluesHalf>\n     \t\t</BodyContainer>);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<StyledCreate blurred={this.state.openModalType !== \"\"}>\n\t\t\t\t\t<NavContainer>\n\t\t\t\t\t\t<NavWrapper\n\t\t\t\t\t\t\tmode=\"create\"\n\t\t\t\t\t\t\tblankMode={this.state.blankMode}\n\t\t\t\t\t\t\tblankModeType={this.state.blankModeType}\n\t\t\t\t\t\t\tpuzzleSaved={this.state.puzzleSaved}\n\t\t\t\t\t\t\tpuzzleName={this.state.puzzleName}\n\t\t\t\t\t\t\tsavedPuzzles={this.state.savedPuzzles}\n\t\t\t\t\t\t\ttoggleSidebarOpen={this.props.toggleSidebarOpen}\n\t\t\t\t\t\t\thandleBlankClick={this.handleBlankClick}\n\t\t\t\t\t\t\thandleEraserTypeClick={this.handleBlankTypeClick}\n\t\t\t\t\t\t\thandleSaveClick={this.handleSaveClick}\n\t\t\t\t\t\t\thandleLoadClick={this.handleLoadClick} \n\t\t\t\t\t\t\thandlePrintClick={this.handlePrintClick}\n\t\t\t\t\t\t\thandleHelpClick={this.handleHelpClick}\n\t\t\t\t\t\t\thandleNewClick={this.setupNewPuzzle} />\n\t\t\t\t\t</NavContainer>\n\t\t\t\t\t{body}\n\t\t\t\t</StyledCreate> \n\n\t\t\t\t{(this.state.openModalType !== \"\") && \n\t\t\t\t\t<CreateModal \n\t\t\t\t\t\tgrid={this.state.grid}\n\t\t\t\t\t\trowLength={this.state.rowLength}\n\t\t\t\t\t\tlabels={this.state.labels}\n\t\t\t\t\t\tclues={this.state.clues}\n\t\t\t\t\t\tsavedPuzzles={this.state.savedPuzzles}\n\t\t\t\t\t\topenModalType={this.state.openModalType}\n\t\t\t\t\t\thandleModalClose={this.handleModalClose}\n\t\t\t\t\t\thandleSaveClick={this.handleSaveClick}\n\t\t\t\t\t\thandleLoadClick={this.handleLoadClick}\n\t\t\t\t\t\thandlePuzzleDeleteClick={this.handlePuzzleDeleteClick}\n\t\t\t\t\t\tpuzzleName={this.state.puzzleName} />\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst StyledCreate = styled.div`\n\tmax-width: 100vw;\n\tmax-height: 100vh;\n\theight: 100vh;\n\twidth: 100vw;\n\ttransition: filter 300ms ease-in-out;\n\tfilter: ${props => props.blurred ? \"blur(3px)\" : \"blur(0)\"};\n`;\n\nconst LoaderContainer = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-top: -50px;\n\tmargin-left: -50px;\n`;\n\nconst NavContainer = styled.div`\n\theight: 45px;\n    width: 100%;\n`;\n\nconst BodyContainer = styled.div`\n\tmax-width: 100%;\n\tmax-height: 100%;\n\theight: calc(100% - 53px);\n\tdisplay: flex;\n`;\n\nconst GridHalf = styled.div`\n\twidth: 50%;\n\t@media (max-width: 1000px) {\n\t\twidth: 45%;\n\t}\n\t@media (max-width: 920px) {\n\t\twidth: 410px;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 40%;\n      \tmin-width: 360px;\n\t}\t\n`;\n\nconst GridHalfRail = styled.div`\n\theight: 100%;\n\twidth: 480px;\n\tmargin: 0 auto;\n\t@media (max-width: 1000px) {\n\t\twidth: 400px;\n      \tpadding-top: 10px;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 350px;\n\t}\t\n`;\n\nconst CluesHalf = styled.div`\n\twidth: 50%;\n\t@media (max-width: 1000px) {\n\t\twidth: 55%;\n\t}\n\t@media (max-width: 920px) {\n\t\tmax-width: 450px;\n\t\tmargin-left: 20px;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 60%;\n      \tmargin-left: 10px;\n\t}\t\n`;\n\nexport default Create;\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport notesIcon from '../../icon/pencil.svg';\nimport plusIcon from '../../icon/plus.svg';\nimport xIcon from '../../icon/x.svg';\n\nconst Sidebar = ({\n    open,\n    activePage,\n    toggleSidebarOpen,\n    changeActivePage\n}) => {\n    useEffect(() => {\n        const handler = (e) => {\n            if (open && e.target.id !== \"menu\" && e.target.id !== \"sidebar-container\") {\n                toggleSidebarOpen(e);\n            }\n        };\n\n        window.addEventListener(\"click\", handler);\n\n        // clean up\n        return () => window.removeEventListener(\"click\", handler);\n    }, [open, toggleSidebarOpen]);\n\n    const pages = [\n        [\"/solve\", \"Solve\", notesIcon, activePage === \"solve\"], \n        [\"/create\", \"Create\", plusIcon, activePage === \"create\"]\n    ];\n\n    return (\n        <React.Fragment>\n            <SidebarContainer open={open} id=\"sidebar-container\">\n                <SidebarClose onClick={toggleSidebarOpen}>\n                    <SidebarCloseIcon src={xIcon} alt=\"Close\"/>\n                </SidebarClose>\n\n                {pages.map(([path, name, icon, isActive]) => {\n                    return (\n                        <LinkItem \n                            to={path} \n                            key={name}\n                            isActive={isActive}\n                            onClick={() => changeActivePage(name.toLowerCase())}>\n                                <LinkItemActiveIndicator isActive={isActive}></LinkItemActiveIndicator> \n                                <LinkItemIcon src={icon} alt={name} />\n                                <p> {name} </p>\n                        </LinkItem>\n                    )\n                })}\n            </SidebarContainer>\n\n            <Overlay open={open}></Overlay>\n        </React.Fragment>\n    );\n}\n\nconst SidebarContainer = styled.div`\n    height: 100vh;\n    width: 200px;\n    position: absolute;\n    top: 0;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    z-index: 3;\n    background-color: rgb(250, 250, 250);\n    transition: left 200ms ease-in-out;\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    box-shadow: ${props => props.open ? \"2px 0 5px 1px rgba(0,0,0,0.4)\" : \"none\"};\n    left: ${props => props.open ? \"0\" : \"-200px\"};\n`;\n\nconst SidebarClose = styled.button`\n    font-size: 15px;\n    font-weight: bold;\n    margin: 10px 15px;\n    background-color: transparent;\n    border: none;\n    align-self: flex-end;\n    outline: none;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst SidebarCloseIcon = styled.img`\n    height: 11px;\n    width: 11px;\n`;\n\nconst LinkItem = styled(({isActive, ...rest}) => <Link {...rest}/>)`\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    border-radius: 2px;\n    text-decoration: none;\n    color: rgba(0,0,0,0.8);\n    &:hover {\n        background-color: rgba(100,100,100,0.1);\n    }\n`;\n\nconst LinkItemActiveIndicator = styled.span`\n    width: 10px;\n    height: 100%;\n    background-color: ${props => props.isActive ? \"#a7d8ff\" : \"transparent\"};\n`;\n\nconst LinkItemIcon = styled.img`\n    height: 15px;\n    width: 15px;\n    margin: 20px;\n    fill: rgba(236, 59, 59, 0.5);\n`;\n\nconst Overlay = styled.div`\n    height: 100vh;\n    width: 100vw;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    background-color: rgb(0,0,0);\n    transition: visibility 0s, opacity 300ms ease-in-out;\n    opacity: ${props => props.open ? \"0.8\" : \"0\"};\n    visibility: ${props => props.open ? \"visible\" : \"hidden\"};\n`;\n\nexport default Sidebar;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport notesIcon from '../../icon/pencil.svg';\nimport plusIcon from '../../icon/plus.svg';\n\nconst FrontDoor = () => {\n    return (\n        <StyledFrontDoor>\n            <CenterRail>\n                <Header>Get Ready to <Highlight>Cross</Highlight> Those <Highlight>Words</Highlight></Header>\n                <Links>\n                    <StyledLink to={\"/solve\"}>\n                        <LinkItem>\n                            <Icon src={notesIcon} />\n                            <Text>Solve</Text>\n                            <Subtext>Work on New York Times puzzles from the last 40 years!</Subtext>\n                        </LinkItem>\n                    </StyledLink>\n\n                    <StyledLink to={\"/create\"}>\n                        <LinkItem>\n                            <Icon src={plusIcon} />\n                            <Text>Create</Text>\n                            <Subtext>Make and download your very own puzzle!</Subtext>\n                        </LinkItem>\n                    </StyledLink>\n                </Links>\n            </CenterRail>\n        </StyledFrontDoor>\n    );\n}\n\nconst StyledFrontDoor = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n`;\n\nconst CenterRail = styled.div`\n    width: 50%;\n    min-width: 520px;\n    @media(max-width: 1100px) {\n        width: 60%;\n    }\n    @media(max-width: 900px) {\n        width: 70%;\n    }\n`;\n\nconst Header = styled.p`\n    font-weight: bold;\n    font-size: 40px;\n    margin-bottom: 80px;\n    min-width: 520px;\n`;\n\nconst Highlight = styled.span`\n    color: #5ca3db;\n`;\n\nconst Links = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\n\nconst LinkItem = styled.div`\n    height: 300px;\n    width: 250px;\n    border-radius: 7px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 0px 2px 3px 2px rgba(0,0,0,0.2);\n    transition: box-shadow 200ms ease-out;\n    &:hover {\n        box-shadow: 0px 3px 4px 2px rgba(0,0,0,0.4);\n    }\n`;\n\nconst Icon = styled.img`\n    height: 40px;\n    width: 40px;\n    margin-top: 50px;\n`;\n\nconst Text = styled.p`\n    font-weight: bold;\n    font-size: 30px;\n    text-decoration: none;\n    margin-top: 30px;\n    color: #444;\n`;\n\nconst Subtext = styled.p`\n    font-size: 16px;\n    text-align: center;\n    padding: 20px;\n    margin-top: 20px;\n    color: #666;\n`;\n\nexport default FrontDoor;","import React, {useState} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Solve from './solve/Solve';\nimport Create from './create/Create';\nimport Sidebar from './common/Sidebar';\nimport FrontDoor from './common/FrontDoor';\n\nconst App = () => {\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n    const [activePage, setActivePage] = useState(\"\");\n\n    const toggleSidebarOpen = () => setSidebarOpen(!sidebarOpen);\n    const changeActivePage = (pageName) => {\n        setActivePage(pageName);\n        setSidebarOpen(false);\n    }\n\n    return (\n        <Router>\n            {activePage !== \"\" &&\n                <Sidebar \n                    open={sidebarOpen}\n                    activePage={activePage}\n                    toggleSidebarOpen={toggleSidebarOpen} \n                    changeActivePage={changeActivePage} />\n            }\n\n            <Switch>\n                <Route exact path={`${process.env.PUBLIC_URL}/`}>\n                    <FrontDoor />\n                </Route>\n\n                <Route path={`${process.env.PUBLIC_URL}/solve`}>\n                    <Solve \n                        toggleSidebarOpen={toggleSidebarOpen}\n                        changeActivePage={changeActivePage} />\n                </Route>\n\n                <Route path={`${process.env.PUBLIC_URL}/create`}>\n                    <Create \n                        toggleSidebarOpen={toggleSidebarOpen}\n                        changeActivePage={changeActivePage} />\n                </Route>\n            </Switch>\n\n            <SmallScreenWarning>\n                Sorry! This site doesn't work on small screens. Try it out on a computer!\n            </SmallScreenWarning>\n        </Router>\n    );\n}\n\nconst SmallScreenWarning = styled.div`\n    display: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    background-color: white;\n    padding: 20px;\n    @media (max-width: 400px) {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n`;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/pencil.ae2808f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.d82c8949.svg\";"],"sourceRoot":""}